<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linear_regression</title>
      <link href="/2020/07/05/linear-regression/"/>
      <url>/2020/07/05/linear-regression/</url>
      
        <content type="html"><![CDATA[<h1 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LinearRegression<span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm<span class="token comment" spellcheck="true"># 创建数据集</span>examDict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'深度'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">20.0</span><span class="token punctuation">,</span> <span class="token number">25.0</span><span class="token punctuation">,</span> <span class="token number">30.0</span><span class="token punctuation">,</span> <span class="token number">35.0</span><span class="token punctuation">,</span> <span class="token number">40.0</span><span class="token punctuation">,</span> <span class="token number">45.0</span><span class="token punctuation">,</span> <span class="token number">50.0</span><span class="token punctuation">,</span> <span class="token number">55.0</span><span class="token punctuation">,</span> <span class="token number">60.0</span><span class="token punctuation">,</span> <span class="token number">65.0</span><span class="token punctuation">,</span> <span class="token number">70.0</span><span class="token punctuation">,</span> <span class="token number">75.0</span><span class="token punctuation">,</span> <span class="token number">80.0</span><span class="token punctuation">,</span> <span class="token number">85.0</span><span class="token punctuation">,</span> <span class="token number">90.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'质心'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">21.0</span><span class="token punctuation">,</span> <span class="token number">26.1</span><span class="token punctuation">,</span> <span class="token number">31.0</span><span class="token punctuation">,</span> <span class="token number">36.1</span><span class="token punctuation">,</span> <span class="token number">40.9</span><span class="token punctuation">,</span> <span class="token number">46.2</span><span class="token punctuation">,</span> <span class="token number">51.2</span><span class="token punctuation">,</span> <span class="token number">55.9</span><span class="token punctuation">,</span> <span class="token number">61.1</span><span class="token punctuation">,</span> <span class="token number">66.2</span><span class="token punctuation">,</span> <span class="token number">71.2</span><span class="token punctuation">,</span> <span class="token number">76.2</span><span class="token punctuation">,</span> <span class="token number">80.8</span><span class="token punctuation">,</span> <span class="token number">86.4</span><span class="token punctuation">,</span> <span class="token number">90.6</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#转换为DataFrame的数据格式</span>examDf <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>examDict<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># -------------------------------------------------------绘制散点图</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>examDf<span class="token punctuation">.</span>深度<span class="token punctuation">,</span> examDf<span class="token punctuation">.</span>质心<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"strawberry data"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 添加图的标签（x轴，y轴）</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">"bbox_center_depth(cm)"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">"strawberry_distance(cm)"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 显示图像</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># -------------------------------------------------------</span>X <span class="token operator">=</span> examDf<span class="token punctuation">.</span>深度<span class="token punctuation">.</span>values<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>y <span class="token operator">=</span> examDf<span class="token punctuation">.</span>质心<span class="token punctuation">.</span>values<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>reg <span class="token operator">=</span> LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"The linear model is: Y = {:.5} + {:.5}X"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>reg<span class="token punctuation">.</span>intercept_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reg<span class="token punctuation">.</span>coef_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># -------------------------------------------------------</span>predictions <span class="token operator">=</span> reg<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>    examDf<span class="token punctuation">.</span>深度<span class="token punctuation">,</span>    examDf<span class="token punctuation">.</span>质心<span class="token punctuation">,</span>    c<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>    examDf<span class="token punctuation">.</span>深度<span class="token punctuation">,</span>    predictions<span class="token punctuation">,</span>    c<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>    linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">"bbox_center_depth(cm)"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">"strawberry_distance(cm)"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># -------------------------------------------------------</span>X <span class="token operator">=</span> examDf<span class="token punctuation">.</span>深度y <span class="token operator">=</span> examDf<span class="token punctuation">.</span>质心X2 <span class="token operator">=</span> sm<span class="token punctuation">.</span>add_constant<span class="token punctuation">(</span>X<span class="token punctuation">)</span>est <span class="token operator">=</span> sm<span class="token punctuation">.</span>OLS<span class="token punctuation">(</span>y<span class="token punctuation">,</span> X2<span class="token punctuation">)</span>est2 <span class="token operator">=</span> est<span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>est2<span class="token punctuation">.</span>summary<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linear regression </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov3 训练模型</title>
      <link href="/2020/06/22/yolov3-xun-lian-mo-xing/"/>
      <url>/2020/06/22/yolov3-xun-lian-mo-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="yolov3-darknet-训练模型"><a href="#yolov3-darknet-训练模型" class="headerlink" title="yolov3_darknet 训练模型"></a>yolov3_darknet 训练模型</h1><p>github代码：<a href="https://github.com/pjreddie/darknet" target="_blank" rel="noopener">https://github.com/pjreddie/darknet</a></p><h2 id="1-darknet安装"><a href="#1-darknet安装" class="headerlink" title="1. darknet安装"></a>1. darknet安装</h2><p>参考官网：<a href="https://pjreddie.com/darknet/" target="_blank" rel="noopener">https://pjreddie.com/darknet/</a></p><h2 id="2-数据集准备"><a href="#2-数据集准备" class="headerlink" title="2.数据集准备"></a>2.数据集准备</h2><p>a. 制作voc格式的数据集</p><p>b. 使用darknet/scripts内的voc_label.py脚本将数据集转换为yolo格式(txt)</p><h2 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h2><p>a. cfg/voc.data文件</p><pre><code>classes= 20 #修改为自己数据集的类别train  = /home/pjreddie/data/voc/train.txt #对应txt文件位置valid  = /home/pjreddie/data/voc/2007_test.txtnames = data/voc.names #对应.names文件backup = backup #权重文件保存位置</code></pre><p>b. data/voc.names文件</p><p>修改为自己的类别</p><p>c. cfg/yolo-voc.cfg文件</p><pre><code>[net]# Testing 测试时去除注释# batch=1 # subdivisions=1# Training 训练时去除注释batch=64subdivisions=16width=608height=608channels=3momentum=0.9decay=0.0005angle=0saturation = 1.5exposure = 1.5hue=.1learning_rate=0.001burn_in=1000max_batches = 500200policy=stepssteps=400000,450000scales=.1,.1------------------------------[convolutional]size=1stride=1pad=1filters=255 # 3x(classes数目+5)activation=linear[yolo]mask = 6,7,8anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326classes=80 #class类数目num=9jitter=.3ignore_thresh = .7truth_thresh = 1random=1 #开启关闭多尺度训练------------------------------</code></pre><h2 id="4-训练过程参数"><a href="#4-训练过程参数" class="headerlink" title="4.训练过程参数"></a>4.训练过程参数</h2><p><strong>Region xx</strong>: cfg文件中yolo-layer的索引；</p><p><strong>Avg IOU</strong>: 当前迭代中，预测的box与标注的box的平均交并比，越大越好，期望数值为1；</p><p><strong>Class</strong>: 标注物体的分类准确率，越大越好，期望数值为1；</p><p><strong>obj</strong>: 越大越好，期望数值为1；</p><p><strong>No obj</strong>: 越小越好；</p><p><strong>.5R</strong>: 以IOU=0.5为阈值时候的recall; recall = 检出的正样本/实际的正样本</p><p><strong>0.75R</strong>: 以IOU=0.75为阈值时候的recall;</p><p><strong>count</strong>: 正样本数目</p><h2 id="5-模型保存与再训练"><a href="#5-模型保存与再训练" class="headerlink" title="5.模型保存与再训练"></a>5.模型保存与再训练</h2><p>a. 迭代次数保存<br>修改examples/darknet.c文件138行</p><pre><code>        if(i%10000==0 || (i &lt; 1000 &amp;&amp; i%100 == 0)){#ifdef GPU            if(ngpus != 1) sync_nets(nets, ngpus, 0);#endif            char buff[256];            sprintf(buff, &quot;%s/%s_%d.weights&quot;, backup_directory, base, i);            save_weights(net, buff);        }</code></pre><p>需重新编译，先 make clean 再 make。</p><p>b. 模型再训练<br>接着上回迭代次数的模型继续训练</p><pre><code>./darknet detector train cfg/voc.data cfg/yolov3-voc.cfg xxx.weights</code></pre><h2 id="6-训练过程可视化"><a href="#6-训练过程可视化" class="headerlink" title="6.训练过程可视化"></a>6.训练过程可视化</h2><p>训练时保存训练时的log文件</p><pre><code>./darknet detector train cfg/voc.data cfg/yolov3-voc.cfg darknet53.conv.74 2&gt;1 | tee visualization/train_yolov3.log </code></pre><p><strong>extract_log.py</strong>脚本生成txt数据供可视化工具绘图</p><pre><code># coding=utf-8# 该文件用来提取训练log，去除不可解析的log后使log文件格式化，生成新的log文件供可视化工具绘图import inspectimport osimport randomimport sysdef extract_log(log_file,new_log_file,key_word):    with open(log_file, &#39;r&#39;) as f:      with open(new_log_file, &#39;w&#39;) as train_log:  #f = open(log_file)    #train_log = open(new_log_file, &#39;w&#39;)        for line in f:    # 去除多gpu的同步log          if &#39;Syncing&#39; in line:            continue    # 去除除零错误的log          if &#39;nan&#39; in line:            continue          if key_word in line:            train_log.write(line)    f.close()    train_log.close()extract_log(&#39;train_yolov3.log&#39;,&#39;train_log_loss.txt&#39;,&#39;images&#39;)extract_log(&#39;train_yolov3.log&#39;,&#39;train_log_iou.txt&#39;,&#39;IOU&#39;)</code></pre><p><strong>train_loss_visualization.py</strong>j脚本用于绘制loss曲线</p><pre><code>import pandas as pdimport numpy as npimport matplotlib.pyplot as plt#%matplotlib inlinelines =5124    #改为自己生成的train_log_loss.txt中的行数result = pd.read_csv(&#39;train_log_loss.txt&#39;, skiprows=[x for x in range(lines) if ((x%10!=9) |(x&lt;1000))] ,error_bad_lines=False, names=[&#39;loss&#39;, &#39;avg&#39;, &#39;rate&#39;, &#39;seconds&#39;, &#39;images&#39;])result.head()result[&#39;loss&#39;]=result[&#39;loss&#39;].str.split(&#39; &#39;).str.get(1)result[&#39;avg&#39;]=result[&#39;avg&#39;].str.split(&#39; &#39;).str.get(1)result[&#39;rate&#39;]=result[&#39;rate&#39;].str.split(&#39; &#39;).str.get(1)result[&#39;seconds&#39;]=result[&#39;seconds&#39;].str.split(&#39; &#39;).str.get(1)result[&#39;images&#39;]=result[&#39;images&#39;].str.split(&#39; &#39;).str.get(1)result.head()result.tail()# print(result.head())# print(result.tail())# print(result.dtypes)print(result[&#39;loss&#39;])print(result[&#39;avg&#39;])print(result[&#39;rate&#39;])print(result[&#39;seconds&#39;])print(result[&#39;images&#39;])result[&#39;loss&#39;]=pd.to_numeric(result[&#39;loss&#39;])result[&#39;avg&#39;]=pd.to_numeric(result[&#39;avg&#39;])result[&#39;rate&#39;]=pd.to_numeric(result[&#39;rate&#39;])result[&#39;seconds&#39;]=pd.to_numeric(result[&#39;seconds&#39;])result[&#39;images&#39;]=pd.to_numeric(result[&#39;images&#39;])result.dtypesfig = plt.figure()ax = fig.add_subplot(1, 1, 1)ax.plot(result[&#39;avg&#39;].values,label=&#39;avg_loss&#39;)# ax.plot(result[&#39;loss&#39;].values,label=&#39;loss&#39;)ax.legend(loc=&#39;best&#39;)  #图列自适应位置ax.set_title(&#39;The loss curves&#39;)ax.set_xlabel(&#39;batches&#39;)fig.savefig(&#39;avg_loss&#39;)# fig.savefig(&#39;loss&#39;)</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1]<a href="https://blog.csdn.net/lilai619/article/details/79695109" target="_blank" rel="noopener">https://blog.csdn.net/lilai619/article/details/79695109</a><br>[2]<a href="https://blog.csdn.net/qq_34806812/article/details/81459982" target="_blank" rel="noopener">https://blog.csdn.net/qq_34806812/article/details/81459982</a></p>]]></content>
      
      
      <categories>
          
          <category> Deep learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> YOLO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>darknet_ros功能包实现3D空间坐标显示</title>
      <link href="/2020/05/20/darknet-ros-gong-neng-bao-shi-xian-3d-kong-jian-zuo-biao-xian-shi/"/>
      <url>/2020/05/20/darknet-ros-gong-neng-bao-shi-xian-3d-kong-jian-zuo-biao-xian-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="目标检测bounding-boxes-生成3D空间坐标显示"><a href="#目标检测bounding-boxes-生成3D空间坐标显示" class="headerlink" title="目标检测bounding boxes 生成3D空间坐标显示"></a>目标检测bounding boxes 生成3D空间坐标显示</h1><h2 id="1-获取空间坐标xyz的方法"><a href="#1-获取空间坐标xyz的方法" class="headerlink" title="1.获取空间坐标xyz的方法"></a>1.获取空间坐标xyz的方法</h2><h3 id="方法一：通过订阅darknet-ros-bounding-boxes的topic，计算检测框中间位置的像素坐标-center-X-center-Y-，订阅深度图，获取当前像素位置摄像头与检测物体的距离z-real，最后计算x-real-y-real，获取空间位置坐标。"><a href="#方法一：通过订阅darknet-ros-bounding-boxes的topic，计算检测框中间位置的像素坐标-center-X-center-Y-，订阅深度图，获取当前像素位置摄像头与检测物体的距离z-real，最后计算x-real-y-real，获取空间位置坐标。" class="headerlink" title="方法一：通过订阅darknet_ros/bounding boxes的topic，计算检测框中间位置的像素坐标(center_X,center_Y)，订阅深度图，获取当前像素位置摄像头与检测物体的距离z_real，最后计算x_real,y_real，获取空间位置坐标。"></a>方法一：通过订阅darknet_ros/bounding boxes的topic，计算检测框中间位置的像素坐标(center_X,center_Y)，订阅深度图，获取当前像素位置摄像头与检测物体的距离z_real，最后计算x_real,y_real，获取空间位置坐标。</h3><h3 id="方法二：目标检测框中心位置像素对应点云数据，直接生成x-y-z空间坐标。"><a href="#方法二：目标检测框中心位置像素对应点云数据，直接生成x-y-z空间坐标。" class="headerlink" title="方法二：目标检测框中心位置像素对应点云数据，直接生成x,y,z空间坐标。"></a>方法二：目标检测框中心位置像素对应点云数据，直接生成x,y,z空间坐标。</h3>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> darknet_ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS find_object功能包</title>
      <link href="/2020/03/25/ros-find-object-gong-neng-bao/"/>
      <url>/2020/03/25/ros-find-object-gong-neng-bao/</url>
      
        <content type="html"><![CDATA[<h1 id="ROS功能包-find-object的使用"><a href="#ROS功能包-find-object的使用" class="headerlink" title="ROS功能包 find_object的使用"></a>ROS功能包 find_object的使用</h1><p><a href="http://wiki.ros.org/find_object_2d" target="_blank" rel="noopener">ROSWIKI</a>,<a href="https://github.com/introlab/find-object" target="_blank" rel="noopener">GITHUB</a>.</p><h2 id="1-功能包的安装"><a href="#1-功能包的安装" class="headerlink" title="1.功能包的安装"></a>1.功能包的安装</h2><p>安装依赖</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ros-melodic-find-object-2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>定位到工作空间 下载源码编译</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> ~/catkin_ws<span class="token function">git</span> clone https://github.com/introlab/find-object src/find_object_2dcatkin_make<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-运行功能包"><a href="#2-运行功能包" class="headerlink" title="2.运行功能包"></a>2.运行功能包</h2><h3 id="1-启动roscore"><a href="#1-启动roscore" class="headerlink" title="1.启动roscore"></a>1.启动roscore</h3><pre class="line-numbers language-bash"><code class="language-bash">roscore<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-启用摄像头节点"><a href="#2-启用摄像头节点" class="headerlink" title="2.启用摄像头节点"></a>2.启用摄像头节点</h3><pre class="line-numbers language-bash"><code class="language-bash">roslaunch usb_cam usb_cam-test.launch <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-启动功能包"><a href="#3-启动功能包" class="headerlink" title="3.启动功能包"></a>3.启动功能包</h3><pre class="line-numbers language-bash"><code class="language-bash">rosrun find_object_2d find_object_2d image:<span class="token operator">=</span>/usb_cam/image_raw<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-实现物体检测"><a href="#4-实现物体检测" class="headerlink" title="4.实现物体检测"></a>4.实现物体检测</h3><ul><li>在find_object界面左侧 Objects下面的空白界面，单击鼠标右键-&gt;Add objects form scene</li><li>按Take picture，选择你准备识别的物体</li><li>框出目标物体 点击-&gt;next，-&gt;end</li></ul><h3 id="5-find-object-3d"><a href="#5-find-object-3d" class="headerlink" title="5.find_object_3d"></a>5.find_object_3d</h3><p>修改find_object_3d.launch 文件</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>launch</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Example finding 3D poses of the objects detected --></span>    <span class="token comment" spellcheck="true">&lt;!-- $roslaunch openni_launch openni.launch depth_registration:=true --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>object_prefix<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>object<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>objects_path<span class="token punctuation">"</span></span>  <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gui<span class="token punctuation">"</span></span>           <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>approx_sync<span class="token punctuation">"</span></span>   <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pnp<span class="token punctuation">"</span></span>           <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tf_example<span class="token punctuation">"</span></span>    <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>settings_path<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/.ros/find_object_2d.ini<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    #修改为深度相机所发布的话题    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rgb_topic<span class="token punctuation">"</span></span>         <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>camera/color/image_raw<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>depth_topic<span class="token punctuation">"</span></span>       <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>camera/depth/image_rect_raw<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>camera_info_topic<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>camera/color/camera_info<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>node</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>find_object_3d<span class="token punctuation">"</span></span> <span class="token attr-name">pkg</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>find_object_2d<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>find_object_2d<span class="token punctuation">"</span></span> <span class="token attr-name">output</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gui<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg gui)<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bool<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>settings_path<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg settings_path)<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>subscribe_depth<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bool<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>objects_path<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg objects_path)<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>object_prefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg object_prefix)<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>approx_sync<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg approx_sync)<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bool<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pnp<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg pnp)<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bool<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remap</span> <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rgb/image_rect_color<span class="token punctuation">"</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg rgb_topic)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remap</span> <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>depth_registered/image_raw<span class="token punctuation">"</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg depth_topic)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remap</span> <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>depth_registered/camera_info<span class="token punctuation">"</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg camera_info_topic)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>node</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Example of tf synchronisation with the objectsStamped message --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>node</span> <span class="token attr-name">if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg tf_example)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tf_example<span class="token punctuation">"</span></span> <span class="token attr-name">pkg</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>find_object_2d<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tf_example<span class="token punctuation">"</span></span> <span class="token attr-name">output</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>object_prefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$(arg object_prefix)<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>node</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>launch</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动3d物体检测</p><pre class="line-numbers language-xhell"><code class="language-xhell">roslaunch realsense_camera rs_rgbd.launchroslaunch find_object_2d find_object_3d.launchrviz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="玄学问题"><a href="#玄学问题" class="headerlink" title="玄学问题"></a>玄学问题</h2><img src="/2020/03/25/ros-find-object-gong-neng-bao/1.png">catkin_make出错 @LIBTIFF_4.0未定义ROS工作空间的问题，更换工作空间。]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> find_object </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS笔记</title>
      <link href="/2020/03/19/ros-bi-ji/"/>
      <url>/2020/03/19/ros-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>#ROS</p><h2 id="catkin工作空间"><a href="#catkin工作空间" class="headerlink" title="catkin工作空间"></a>catkin工作空间</h2><p><a href="http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment" target="_blank" rel="noopener">http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment</a></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">mkdir</span> -p ~/catkin_ws/src <span class="token comment" spellcheck="true">#创建工作空间</span><span class="token function">cd</span> ~/catkin_ws/ <span class="token comment" spellcheck="true">#定位到上层目录</span>catkin_make <span class="token comment" spellcheck="true">#catkin_make -DPYTHON_EXECUTABLE=/usr/bin/python3 使用python3编译</span><span class="token function">source</span> devel/setup.bash <span class="token comment" spellcheck="true">#将工作空间加入环境变量</span><span class="token keyword">echo</span> <span class="token variable">$ROS_PACKAGE_PATH</span> <span class="token comment" spellcheck="true">#查看当前环境变量</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>多个工作空间同时工作（待测试）</p><pre class="line-numbers language-bash"><code class="language-bash">vim ~/.bashrc<span class="token function">source</span> ~/catkin_ws/devel/setup.sh<span class="token function">source</span> ~/test_ws/devel/setup.shunset <span class="token variable">$ROS_PACKAGE_PATH</span> <span class="token comment" spellcheck="true">#清理环境变量</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="TF"><a href="#TF" class="headerlink" title="TF"></a>TF</h2><p>TF介绍：<a href="https://wiki.ros.org/tf/Tutorials/Introduction%20to%20tf" target="_blank" rel="noopener">https://wiki.ros.org/tf/Tutorials/Introduction%20to%20tf</a></p><p>TF包（工具）：<a href="https://wiki.ros.org/tf" target="_blank" rel="noopener">https://wiki.ros.org/tf</a></p><p><a href="https://docs.ros.org/api/tf/html/python/tf_python.html#" target="_blank" rel="noopener">https://docs.ros.org/api/tf/html/python/tf_python.html#</a></p><h2 id="ROS工具"><a href="#ROS工具" class="headerlink" title="ROS工具"></a>ROS工具</h2><p><a href="https://gazebosim.org/" target="_blank" rel="noopener">https://gazebosim.org/</a></p><p><a href="https://wiki.ros.org/rviz" target="_blank" rel="noopener">https://wiki.ros.org/rviz</a></p><p><a href="https://wiki.ros.org/rqt" target="_blank" rel="noopener">https://wiki.ros.org/rqt</a></p><p><a href="https://wiki.ros.org/rosbag" target="_blank" rel="noopener">https://wiki.ros.org/rosbag</a></p>]]></content>
      
      
      <categories>
          
          <category> NOTE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow 笔记</title>
      <link href="/2020/03/15/tensorflow-bi-ji/"/>
      <url>/2020/03/15/tensorflow-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="tensotflow笔记"><a href="#tensotflow笔记" class="headerlink" title="tensotflow笔记"></a>tensotflow笔记</h1><p><a href="https://www.tensorflow.org/api_docs/python/tf" target="_blank" rel="noopener">tfAPI查询</a></p><h2 id="1-线性回归"><a href="#1-线性回归" class="headerlink" title="1.线性回归"></a>1.线性回归</h2><p>一组数据求回归方程 y=wx+b</p><p>转化为求loss=sum [(wxi+b-yi)**2]的minimize</p><p>梯度下降 w’=w-learningrate<em>d(loss)/dw<br>         b’=b-learningrate</em>d(loss)/db</p><p>使得w’x+b’ -&gt; y</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment" spellcheck="true"># y = wx + b</span><span class="token keyword">def</span> <span class="token function">compute_error_for_line_given_points</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> w<span class="token punctuation">,</span> points<span class="token punctuation">)</span><span class="token punctuation">:</span>    totalError <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>points<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> points<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>        y <span class="token operator">=</span> points<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># computer mean-squared-error</span>        totalError <span class="token operator">+=</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token punctuation">(</span>w <span class="token operator">*</span> x <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span>    <span class="token comment" spellcheck="true"># average loss for each point</span>    <span class="token keyword">return</span> totalError <span class="token operator">/</span> float<span class="token punctuation">(</span>len<span class="token punctuation">(</span>points<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">step_gradient</span><span class="token punctuation">(</span>b_current<span class="token punctuation">,</span> w_current<span class="token punctuation">,</span> points<span class="token punctuation">,</span> learningRate<span class="token punctuation">)</span><span class="token punctuation">:</span>    b_gradient <span class="token operator">=</span> <span class="token number">0</span>    w_gradient <span class="token operator">=</span> <span class="token number">0</span>    N <span class="token operator">=</span> float<span class="token punctuation">(</span>len<span class="token punctuation">(</span>points<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>points<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> points<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>        y <span class="token operator">=</span> points<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># grad_b = 2(wx+b-y)</span>        b_gradient <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">/</span>N<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>w_current <span class="token operator">*</span> x <span class="token operator">+</span> b_current<span class="token punctuation">)</span> <span class="token operator">-</span> y<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># grad_w = 2(wx+b-y)*x</span>        w_gradient <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">/</span>N<span class="token punctuation">)</span> <span class="token operator">*</span> x <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>w_current <span class="token operator">*</span> x <span class="token operator">+</span> b_current<span class="token punctuation">)</span> <span class="token operator">-</span> y<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># update w'</span>    new_b <span class="token operator">=</span> b_current <span class="token operator">-</span> <span class="token punctuation">(</span>learningRate <span class="token operator">*</span> b_gradient<span class="token punctuation">)</span>    new_w <span class="token operator">=</span> w_current <span class="token operator">-</span> <span class="token punctuation">(</span>learningRate <span class="token operator">*</span> w_gradient<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>new_b<span class="token punctuation">,</span> new_w<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">gradient_descent_runner</span><span class="token punctuation">(</span>points<span class="token punctuation">,</span> starting_b<span class="token punctuation">,</span> starting_w<span class="token punctuation">,</span> learning_rate<span class="token punctuation">,</span> num_iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>    b <span class="token operator">=</span> starting_b    w <span class="token operator">=</span> starting_w    <span class="token comment" spellcheck="true"># update for several times</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>num_iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>        b<span class="token punctuation">,</span> w <span class="token operator">=</span> step_gradient<span class="token punctuation">(</span>b<span class="token punctuation">,</span> w<span class="token punctuation">,</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>points<span class="token punctuation">)</span><span class="token punctuation">,</span> learning_rate<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>b<span class="token punctuation">,</span> w<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    points <span class="token operator">=</span> np<span class="token punctuation">.</span>genfromtxt<span class="token punctuation">(</span><span class="token string">"data.csv"</span><span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">","</span><span class="token punctuation">)</span>    learning_rate <span class="token operator">=</span> <span class="token number">0.0001</span>    initial_b <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true"># initial y-intercept guess</span>    initial_w <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true"># initial slope guess</span>    num_iterations <span class="token operator">=</span> <span class="token number">1000</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Starting gradient descent at b = {0}, w = {1}, error = {2}"</span>          <span class="token punctuation">.</span>format<span class="token punctuation">(</span>initial_b<span class="token punctuation">,</span> initial_w<span class="token punctuation">,</span>                  compute_error_for_line_given_points<span class="token punctuation">(</span>initial_b<span class="token punctuation">,</span> initial_w<span class="token punctuation">,</span> points<span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Running..."</span><span class="token punctuation">)</span>    <span class="token punctuation">[</span>b<span class="token punctuation">,</span> w<span class="token punctuation">]</span> <span class="token operator">=</span> gradient_descent_runner<span class="token punctuation">(</span>points<span class="token punctuation">,</span> initial_b<span class="token punctuation">,</span> initial_w<span class="token punctuation">,</span> learning_rate<span class="token punctuation">,</span> num_iterations<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"After {0} iterations b = {1}, w = {2}, error = {3}"</span><span class="token punctuation">.</span>          format<span class="token punctuation">(</span>num_iterations<span class="token punctuation">,</span> b<span class="token punctuation">,</span> w<span class="token punctuation">,</span>                 compute_error_for_line_given_points<span class="token punctuation">(</span>b<span class="token punctuation">,</span> w<span class="token punctuation">,</span> points<span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-图像分类mnist手写数据集"><a href="#2-图像分类mnist手写数据集" class="headerlink" title="2. 图像分类mnist手写数据集"></a>2. 图像分类mnist手写数据集</h2><p>iteration：表示1次迭代（也叫training step），每次迭代更新1次网络结构的参数；<br>batch-size：1次迭代所使用的样本量；<br>epoch：1个epoch表示过了1遍训练集中的所有样本。</p><p>图像[28,28,1] -&gt; [784]</p><p>X:[b,784] 图像数目b<br>W:[784,10] 图像类别10<br>b:[10]<br>out=X@W + b #out:[b,10]</p><p>out=relu(X@W + b)<br>修正线性单元(Rectified linear unit，ReLU）神经元的激活函数<br>如果不适用激励函数，那么在这种情况下每一层的输出都是上层输入的线性函数，很容易验证，无论你神经网络有多少层，输出都是输入的线性组合，与没有隐藏层效果相当</p><p>梯度消失 sigmoid函数正无穷和负无穷</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span>  os<span class="token keyword">import</span>  tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span>    tensorflow <span class="token keyword">import</span> keras<span class="token keyword">from</span>    tensorflow<span class="token punctuation">.</span>keras <span class="token keyword">import</span> layers<span class="token punctuation">,</span> optimizers<span class="token punctuation">,</span> datasetsos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'TF_CPP_MIN_LOG_LEVEL'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'2'</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x_val<span class="token punctuation">,</span> y_val<span class="token punctuation">)</span> <span class="token operator">=</span> datasets<span class="token punctuation">.</span>mnist<span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span> x <span class="token operator">=</span> tf<span class="token punctuation">.</span>convert_to_tensor<span class="token punctuation">(</span>x<span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">.</span>y <span class="token operator">=</span> tf<span class="token punctuation">.</span>convert_to_tensor<span class="token punctuation">(</span>y<span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>y <span class="token operator">=</span> tf<span class="token punctuation">.</span>one_hot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>train_dataset <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>train_dataset <span class="token operator">=</span> train_dataset<span class="token punctuation">.</span>batch<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>model <span class="token operator">=</span> keras<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>     layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>optimizer <span class="token operator">=</span> optimizers<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>learning_rate<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">train_epoch</span><span class="token punctuation">(</span>epoch<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># Step4.loop</span>    <span class="token keyword">for</span> step<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>train_dataset<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># [b, 28, 28] => [b, 784]</span>            x <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token operator">*</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># Step1. compute output</span>            <span class="token comment" spellcheck="true"># [b, 784] => [b, 10]</span>            out <span class="token operator">=</span> model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># Step2. compute loss</span>            loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>square<span class="token punctuation">(</span>out <span class="token operator">-</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># Step3. optimize and update w1, w2, w3, b1, b2, b3</span>        grads <span class="token operator">=</span> tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>loss<span class="token punctuation">,</span> model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># w' = w - lr * grad</span>        optimizer<span class="token punctuation">.</span>apply_gradients<span class="token punctuation">(</span>zip<span class="token punctuation">(</span>grads<span class="token punctuation">,</span> model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> step <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>epoch<span class="token punctuation">,</span> step<span class="token punctuation">,</span> <span class="token string">'loss:'</span><span class="token punctuation">,</span> loss<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">train</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        train_epoch<span class="token punctuation">(</span>epoch<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    train<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-tensorflow数据类型"><a href="#3-tensorflow数据类型" class="headerlink" title="3.tensorflow数据类型"></a>3.tensorflow数据类型</h2><p>list -&gt; np.array -&gt; tf.Tensor</p><ul><li>int,float,double</li><li>bool</li><li>string</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#数据类型</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#int32</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#float32</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#error</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>double<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#float64</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#bool</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token string">'hello world'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#string</span><span class="token comment" spellcheck="true">#属性</span><span class="token keyword">with</span> tf<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">'cpu'</span><span class="token punctuation">)</span>：     a <span class="token operator">=</span> tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>a<span class="token punctuation">.</span>devive <span class="token comment" spellcheck="true">#cpu</span>aa<span class="token operator">=</span>a<span class="token punctuation">.</span>gpu<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#aa gpu</span>a<span class="token punctuation">.</span>numpy <span class="token comment" spellcheck="true">#返回numpy</span>a<span class="token punctuation">.</span>ndim <span class="token comment" spellcheck="true">#返回维度</span>a<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#返回shape</span><span class="token comment" spellcheck="true">#判断</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span>isinstance<span class="token punctuation">(</span>a<span class="token punctuation">.</span>tfTensor<span class="token punctuation">)</span>tf<span class="token punctuation">.</span>is_tensor<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#true</span>a<span class="token punctuation">.</span>dtype <span class="token comment" spellcheck="true">#tf.float32</span><span class="token comment" spellcheck="true">#数据类型转换</span>a<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#([0,1,2,3,4])</span>a<span class="token punctuation">.</span>dtype <span class="token comment" spellcheck="true">#int64</span>aa<span class="token operator">=</span>tf<span class="token punctuation">.</span>convert_to_tensor<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#int64</span>aa<span class="token operator">=</span>tf<span class="token punctuation">.</span>convert_to_tensor<span class="token punctuation">(</span>a<span class="token punctuation">,</span>dtype<span class="token operator">=</span>int32<span class="token punctuation">)</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>aa<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#cast数据类型转换</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>b<span class="token punctuation">,</span>dtype<span class="token operator">=</span>bool<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#false,true</span>c<span class="token operator">=</span>tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>a<span class="token punctuation">)</span>c<span class="token punctuation">.</span>trainable <span class="token comment" spellcheck="true">#true </span>int<span class="token punctuation">(</span>Tesor<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#直接转换 前提标量</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-创建tensor"><a href="#4-创建tensor" class="headerlink" title="4.创建tensor"></a>4.创建tensor</h2><pre class="line-numbers language-python"><code class="language-python">tf<span class="token punctuation">.</span>convert_to_tensor<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#2行3列 元素都为1  dtype=float64</span>tf<span class="token punctuation">.</span>convert_to_tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#dtype=int32 1维长度为2的data</span>tf<span class="token punctuation">.</span>convert_to_tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#2行一列 dyype=float32</span>tf<span class="token punctuation">.</span>zero<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span>，<span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#shape=[]</span>tf<span class="token punctuation">.</span>zero_like<span class="token punctuation">(</span>a<span class="token punctuation">)</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>a<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#等同</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#shape=(1,)</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#shape=()</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#shape=(2,)</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>ones_like<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">==</span> tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>a<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>tf<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#填充为0</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>mean<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>stddev<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># mean: 正态分布的均值，默认为0 ,stddev: 正态分布的标准差，默认为1.0</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>truncated_normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>mean<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>stddev<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#截断的正态分布中输出随机值,和一般的正太分布的产生随机数据比起来，这个函数产生的随机数与均值的差距不会超过两倍的标准差，但是一般的别的函数是可能的。</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>minval<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>maxval<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#均匀分布0~1</span>idx<span class="token operator">=</span>tf<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>idx<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>suffle<span class="token punctuation">(</span>idx<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#打乱顺序</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>a<span class="token punctuation">,</span>idx<span class="token punctuation">)</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>b<span class="token punctuation">.</span>idx<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#用于有对应关系的数据</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>DIM:<br>NPL [b,seq_len,word_dim] #b句 句长 字维度</p><p>IMAGE [b,h,w,c] #4维 b张图片 high wight rgb通道</p><h2 id="5-索引与切片"><a href="#5-索引与切片" class="headerlink" title="5. 索引与切片"></a>5. 索引与切片</h2><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#shape(5,3) num=1</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#shape(3,)</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#shape()</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#image</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#[28,28,3]</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#[28,3]</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true"># [3]</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true"># []</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#[9]</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#[0,1]</span>a<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([4,28,28,3])</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#([4,28,28]) 所有图片第一个rgb通道</span><span class="token comment" spellcheck="true">#strat:end:step</span><span class="token comment" spellcheck="true">#::step</span>a<span class="token punctuation">.</span>tf<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#倒序3,2,1,0</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#3,1</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#2,0</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>randommnormal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#task</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token operator">==</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#scores [4,35,8] 4个班 35学生 8门成绩</span>tf<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>indices<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>gather_nd<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#0班第1人第2门成绩 []</span>tf<span class="token punctuation">.</span>gather_nd<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true"># [1]</span>tf<span class="token punctuation">.</span>boolean_mask<span class="token punctuation">(</span>a<span class="token punctuation">,</span>mask<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-维度变换"><a href="#6-维度变换" class="headerlink" title="6.维度变换"></a>6.维度变换</h2><p>view<br>[b,28,28]<br>-&gt; [b,28<em>28]<br>-&gt; [b,2,14</em>28]<br>-&gt; [b,28,28,1]</p><p>content:[b,h,w,c] [batch,height,width,channel]</p><p>image:[4,28,28,3] view=content(h,w)</p><p>reshape to:[4,784,3]</p><p>[4,784,3] —height28,width28—-&gt; [4,28,28,3]</p><p><strong>tf.reshape</strong></p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#view1</span>a<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>a<span class="token punctuation">.</span>ndim <span class="token comment" spellcheck="true">#[4,28,28,3] , 4</span>tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">784</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># view2</span>tf<span class="token punctuation">.</span>rehsape<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">784</span><span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#view1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>tf.transpose</strong></p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([1,2,3,4])</span>tf<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>a<span class="token punctuation">,</span>perm<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#([4,3,1,2])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>Squeeze and Expand dim</strong></p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>expand_dims<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([1,4,35,8])</span>tf<span class="token punctuation">.</span>expand_dims<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([4,35,8,1])</span>tf<span class="token punctuation">.</span>expand_dims<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([4,35,8,1])</span>tf<span class="token punctuation">.</span>expand_dims<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([1,4,35,8])</span>tf<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([2,3])</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>a<span class="token punctuation">.</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([2,1,3])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-Broadcasting"><a href="#7-Broadcasting" class="headerlink" title="7.Broadcasting"></a>7.Broadcasting</h2><p>KEY IDEA<br>-Insert 1 dim ahead if needed<br>-Expand dims with size 1 to same size<br>扩张成同一shape进行运算，实际扩张部分没有数据。<br>右对齐<br>节省内存</p><pre class="line-numbers language-python"><code class="language-python">x<span class="token operator">=</span>tf<span class="token punctuation">,</span>random<span class="token punctuation">,</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token operator">+</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([4,32,32,3])</span><span class="token punctuation">(</span>x<span class="token operator">+</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([4,32,32,3])</span><span class="token punctuation">(</span>x<span class="token operator">+</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([4,32,32,3])</span><span class="token punctuation">(</span>x<span class="token operator">+</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#incompatible shape</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>broadcast_to<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-数学运算"><a href="#8-数学运算" class="headerlink" title="8.数学运算"></a>8.数学运算</h2><p><strong>element-wise</strong></p><pre class="line-numbers language-python"><code class="language-python">b<span class="token operator">=</span>tf<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">)</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>a<span class="token operator">+</span>b<span class="token punctuation">,</span>a<span class="token operator">-</span>b<span class="token punctuation">,</span>a<span class="token operator">*</span>b<span class="token punctuation">,</span>a<span class="token operator">/</span>b b<span class="token operator">//</span>a<span class="token punctuation">,</span>b<span class="token operator">%</span>a <span class="token comment" spellcheck="true">#整除 取余</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>a<span class="token punctuation">)</span>tf<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>a<span class="token punctuation">)</span>tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">/</span>tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#3</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>tf<span class="token punctuation">.</span>pow<span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>b<span class="token operator">**</span><span class="token number">3</span>tf<span class="token punctuation">.</span>sqpt<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>matrix-wise</strong></p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>a@b <span class="token comment" spellcheck="true">#[[4.,4.,4.,4.]]</span>tf<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">)</span>a@b <span class="token comment" spellcheck="true">#shape =[4,2,5]</span>a<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#[4,2,3]</span>b<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#[3,5]</span>bb<span class="token operator">=</span>tf<span class="token punctuation">.</span>broadcast_to<span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>a@b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="9-前向传播"><a href="#9-前向传播" class="headerlink" title="9.前向传播"></a>9.前向传播</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span>  tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span>    tensorflow <span class="token keyword">import</span> keras<span class="token keyword">from</span>    tensorflow<span class="token punctuation">.</span>keras <span class="token keyword">import</span> datasets<span class="token keyword">import</span>  osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'TF_CPP_MIN_LOG_LEVEL'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'2'</span> <span class="token comment" spellcheck="true">#消除tensorflow初始化的一些提示</span><span class="token comment" spellcheck="true"># x: [60k, 28, 28],</span><span class="token comment" spellcheck="true"># y: [60k]</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> _ <span class="token operator">=</span> datasets<span class="token punctuation">.</span>mnist<span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># x: [0~255] => [0~1.]</span>x <span class="token operator">=</span> tf<span class="token punctuation">.</span>convert_to_tensor<span class="token punctuation">(</span>x<span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">.</span>y <span class="token operator">=</span> tf<span class="token punctuation">.</span>convert_to_tensor<span class="token punctuation">(</span>y<span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> x<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> y<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>reduce_min<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>reduce_max<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>reduce_min<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>reduce_max<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>train_db <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>batch<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span>train_iter <span class="token operator">=</span> iter<span class="token punctuation">(</span>train_db<span class="token punctuation">)</span>sample <span class="token operator">=</span> next<span class="token punctuation">(</span>train_iter<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'batch:'</span><span class="token punctuation">,</span> sample<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">,</span> sample<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># [b, 784] => [b, 256] => [b, 128] => [b, 10]</span><span class="token comment" spellcheck="true"># [dim_in, dim_out], [dim_out]</span>w1 <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>truncated_normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">784</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stddev<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>b1 <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>w2 <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>truncated_normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stddev<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>b2 <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>w3 <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>truncated_normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stddev<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>b3 <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lr <span class="token operator">=</span> <span class="token number">1e</span><span class="token operator">-</span><span class="token number">3</span><span class="token keyword">for</span> epoch <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># iterate db for 10</span>    <span class="token keyword">for</span> step<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>train_db<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># for every batch</span>        <span class="token comment" spellcheck="true"># x:[128, 28, 28]</span>        <span class="token comment" spellcheck="true"># y: [128]</span>        <span class="token comment" spellcheck="true"># [b, 28, 28] => [b, 28*28]</span>        x <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token operator">*</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># tf.Variable</span>            <span class="token comment" spellcheck="true"># x: [b, 28*28]</span>            <span class="token comment" spellcheck="true"># h1 = x@w1 + b1</span>            <span class="token comment" spellcheck="true"># [b, 784]@[784, 256] + [256] => [b, 256] + [256] => [b, 256] + [b, 256]</span>            h1 <span class="token operator">=</span> x@w1 <span class="token operator">+</span> tf<span class="token punctuation">.</span>broadcast_to<span class="token punctuation">(</span>b1<span class="token punctuation">,</span> <span class="token punctuation">[</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            h1 <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>h1<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># [b, 256] => [b, 128]</span>            h2 <span class="token operator">=</span> h1@w2 <span class="token operator">+</span> b2            h2 <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>h2<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># [b, 128] => [b, 10]</span>            out <span class="token operator">=</span> h2@w3 <span class="token operator">+</span> b3            <span class="token comment" spellcheck="true"># compute loss</span>            <span class="token comment" spellcheck="true"># out: [b, 10]</span>            <span class="token comment" spellcheck="true"># y: [b] => [b, 10]</span>            y_onehot <span class="token operator">=</span> tf<span class="token punctuation">.</span>one_hot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># mse = mean(sum(y-out)^2)</span>            <span class="token comment" spellcheck="true"># [b, 10]</span>            loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>square<span class="token punctuation">(</span>y_onehot <span class="token operator">-</span> out<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># mean: scalar</span>            loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>loss<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># compute gradients</span>        grads <span class="token operator">=</span> tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>loss<span class="token punctuation">,</span> <span class="token punctuation">[</span>w1<span class="token punctuation">,</span> b1<span class="token punctuation">,</span> w2<span class="token punctuation">,</span> b2<span class="token punctuation">,</span> w3<span class="token punctuation">,</span> b3<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(grads)</span>        <span class="token comment" spellcheck="true"># w1 = w1 - lr * w1_grad</span>        w1<span class="token punctuation">.</span>assign_sub<span class="token punctuation">(</span>lr <span class="token operator">*</span> grads<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        b1<span class="token punctuation">.</span>assign_sub<span class="token punctuation">(</span>lr <span class="token operator">*</span> grads<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        w2<span class="token punctuation">.</span>assign_sub<span class="token punctuation">(</span>lr <span class="token operator">*</span> grads<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        b2<span class="token punctuation">.</span>assign_sub<span class="token punctuation">(</span>lr <span class="token operator">*</span> grads<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        w3<span class="token punctuation">.</span>assign_sub<span class="token punctuation">(</span>lr <span class="token operator">*</span> grads<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        b3<span class="token punctuation">.</span>assign_sub<span class="token punctuation">(</span>lr <span class="token operator">*</span> grads<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> step <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>epoch<span class="token punctuation">,</span> step<span class="token punctuation">,</span> <span class="token string">'loss:'</span><span class="token punctuation">,</span> float<span class="token punctuation">(</span>loss<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10-合并与分割"><a href="#10-合并与分割" class="headerlink" title="10.合并与分割"></a>10.合并与分割</h2><p><strong>tf.concat / tf.stack</strong></p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>c<span class="token operator">=</span>tf<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true"># ([4,35,8])</span>tf<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># error 所有维度都相等</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>tf.unstack / tf.split</strong> </p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#[2,4,35,8]</span>res<span class="token operator">=</span>tf<span class="token punctuation">.</span>unstack<span class="token punctuation">(</span>c<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#打散</span>len<span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#8</span>res<span class="token operator">=</span>tf<span class="token punctuation">.</span>split<span class="token punctuation">(</span>c<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>num_or_size_splits<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>len<span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#2</span>res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#[2,4,35,4]</span>res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>tf<span class="token punctuation">.</span>split<span class="token punctuation">(</span>c<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>num_or_size_splits<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">,</span>res<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#[2,4,35,2] [2,4,35,4]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="11-数据统计"><a href="#11-数据统计" class="headerlink" title="11.数据统计"></a>11.数据统计</h2><p><strong>Vector Norm 范数</strong><br>-Eukl.Norm=sqrt(sum(xi**2))  #2范数 xi平方和开根号<br>-Max.norm=max(abs(xi)) #正无穷范数 向量的所有元素的绝对值中最大的<br>-L1-Norm=sum(abs(xi)) #1范数 元素绝对值和</p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#2范数 2</span><span class="token operator">==</span>tf<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>square<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>norm <span class="token comment" spellcheck="true">#96.99484</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#2</span>tf<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>b<span class="token punctuation">,</span>ord<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#axis=1 行   [sqrt(2),sqrt(2)]</span>tf<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>b<span class="token punctuation">,</span>ord<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#1范数 4</span>tf<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>b<span class="token punctuation">,</span>ord<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#1范数 列 [2,2]</span>tf<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>b<span class="token punctuation">.</span>ord<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>reduce_min/max/mean</strong> </p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>reduce_min<span class="token punctuation">(</span>a<span class="token punctuation">)</span>tf<span class="token punctuation">.</span>reduce_max<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>argmax/argmin</strong> #最大最小值的位置</p><pre class="line-numbers language-python"><code class="language-python">a<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#([4,10])</span>tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#axis默认为0, [10]</span>tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>tf.equal</strong></p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[False,False,False,True,False]</span>res<span class="token operator">=</span>tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>res<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#numpy=1</span><span class="token comment" spellcheck="true">#accuracy</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token number">0.7</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0.9</span><span class="token punctuation">,</span><span class="token number">0.05</span><span class="token punctuation">,</span><span class="token number">0.05</span><span class="token punctuation">]</span><span class="token punctuation">]</span>pred<span class="token operator">=</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[2,0]</span>y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>y<span class="token punctuation">,</span>pred<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[True,False]</span>correct<span class="token operator">=</span>tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>y<span class="token punctuation">,</span>pred<span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#1</span>correct<span class="token operator">/</span><span class="token number">2</span> <span class="token comment" spellcheck="true">#0.5</span>```python<span class="token operator">**</span>tf<span class="token punctuation">,</span>unique<span class="token operator">**</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#消去重复[4,2,3]  原始索引[0,1,1,0,2]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="12-张量排序"><a href="#12-张量排序" class="headerlink" title="12.张量排序"></a>12.张量排序</h2><p><strong>Sort/argsort</strong></p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>suffle<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[2,0,3,4,1]</span>tf<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">,</span>direction<span class="token operator">=</span><span class="token string">'DESCENGING'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[4,3,2,1,0]</span>tf<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>a<span class="token punctuation">,</span>direction<span class="token operator">=</span><span class="token string">'DESCENGING'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[3,2,0,4,1]</span>idx<span class="token operator">=</span>tf<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>a<span class="token punctuation">,</span>direction<span class="token operator">=</span><span class="token string">'DESCENGING'</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>a<span class="token punctuation">,</span>idx<span class="token punctuation">)</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>ranfom<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>maxval<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[[4,6,8],[9,4,7],[4,5,1]]</span>tf<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#默认升序 [[4,6,8],[4,7,9],[1,4,5]]</span>tf<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">,</span>direction<span class="token operator">=</span><span class="token string">'DESCENFING'</span><span class="token punctuation">)</span>idx<span class="token operator">=</span>tf<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Top_k</strong></p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>res<span class="token operator">=</span>tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>top_k<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#前两个最大值</span>res<span class="token punctuation">.</span>indices <span class="token comment" spellcheck="true">#[[2,1],[0,2],[1,0]]</span>res<span class="token punctuation">.</span>values <span class="token comment" spellcheck="true">#[[8,6][9,7],[5,4]]</span><span class="token comment" spellcheck="true">#accuracy</span>prob<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token number">0.7</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token number">0.7</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>k_b<span class="token operator">=</span>tf<span class="token punctuation">.</span>mah<span class="token punctuation">.</span>top_k<span class="token punctuation">(</span>prob<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>indices <span class="token comment" spellcheck="true">#[[2,1,0],[1,0,2]]</span>k_b<span class="token operator">=</span>tf<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>k_b<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[[2,1],[1,0],[0,2]]</span>target<span class="token operator">=</span>tf<span class="token punctuation">.</span>broadcast_to<span class="token punctuation">(</span>target<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#top_k accuracy</span><span class="token keyword">def</span> <span class="token function">accuracy</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> target<span class="token punctuation">,</span> topk<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    maxk <span class="token operator">=</span> max<span class="token punctuation">(</span>topk<span class="token punctuation">)</span>    batch_size <span class="token operator">=</span> target<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>top_k<span class="token punctuation">(</span>output<span class="token punctuation">,</span> maxk<span class="token punctuation">)</span><span class="token punctuation">.</span>indices    pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>pred<span class="token punctuation">,</span> perm<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    target_ <span class="token operator">=</span> tf<span class="token punctuation">.</span>broadcast_to<span class="token punctuation">(</span>target<span class="token punctuation">,</span> pred<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>    correct <span class="token operator">=</span> tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>pred<span class="token punctuation">,</span> target_<span class="token punctuation">)</span>    res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> topk<span class="token punctuation">:</span>        correct_k <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>correct<span class="token punctuation">[</span><span class="token punctuation">:</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>        correct_k <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>correct_k<span class="token punctuation">)</span>        acc <span class="token operator">=</span> float<span class="token punctuation">(</span>correct_k<span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">100.0</span> <span class="token operator">/</span> batch_size<span class="token punctuation">)</span> <span class="token punctuation">)</span>        res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>acc<span class="token punctuation">)</span>    <span class="token keyword">return</span> res<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="13-填充与复制"><a href="#13-填充与复制" class="headerlink" title="13.填充与复制"></a>13.填充与复制</h2><p><strong>pad</strong></p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[[0,1,2],[3,4,5],[6,7,8]]</span>tf<span class="token punctuation">.</span>pad<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[[上，下]，[左，右]] 左边扩张一列默认为0</span><span class="token comment" spellcheck="true">#image padding</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>noraml<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>pad<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#[4,32,32,3]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>tile</strong>复制</p><pre class="line-numbers language-python"><code class="language-python">a<span class="token punctuation">.</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>tile<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[行，列] 1保持不变 2列维度变为两倍</span>b<span class="token punctuation">.</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>tile VS broadcast_to</p><h2 id="14-张量限幅"><a href="#14-张量限幅" class="headerlink" title="14.张量限幅"></a>14.张量限幅</h2><p><strong>clip_by_value</strong>  Relu</p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span>tf<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[2,2,2,3,4,5,6,7,8,9]</span>tf<span class="token punctuation">.</span>minimum<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[0,1,2,3,4,5,6,7,8,8]</span>tf<span class="token punctuation">.</span>clip_by_value<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[2,2,2,3,4,5,6,7,8,8]</span>a<span class="token operator">=</span>a<span class="token number">-5</span> <span class="token comment" spellcheck="true">#[-5,-4,-3,-2,-1,0,1,2,3,4]</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[0,0,0,0,0,0,1,2,3,4]</span><span class="token operator">==</span>tf<span class="token punctuation">.</span>maxmum<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>clip_by_nrom</strong>根据范数 等比例缩小</p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>mean<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>a<span class="token punctuation">)</span>aa<span class="token operator">=</span>tf<span class="token punctuation">.</span>clip_by_norm<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>aa<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#范数=15</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>梯度爆炸(Gradiet Exploding) 单次步长过长 造成loss震荡<br>梯度消失(Gradiet vanishing)  单次步长过小 造成loss降不下去<br>保证梯度方向不变 [w1,w2,w3]同时变化<br>new_grads,total_norm=tf.clip_by_global_norm(grads,25) #保持整体norm=25</p><h2 id="15-高级操作"><a href="#15-高级操作" class="headerlink" title="15.高级操作"></a>15.高级操作</h2><p><strong>Where(tensor)</strong></p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">,</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mask<span class="token operator">=</span>a<span class="token operator">></span><span class="token number">0</span> <span class="token comment" spellcheck="true">#shape=3x3 value=true or false</span>tf<span class="token punctuation">.</span>boolean_mask<span class="token punctuation">(</span>a<span class="token punctuation">,</span>mask<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#返回值ture的具体值 == tf.gather_nd(a,indices)</span>indices<span class="token operator">=</span>tf<span class="token punctuation">.</span>where<span class="token punctuation">(</span>mask<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#返回值为true的坐标 </span>mask <span class="token comment" spellcheck="true">#[[T,T,F],[T,F,F],[T,T,F]]</span>A<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>B<span class="token operator">=</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>whera<span class="token punctuation">(</span>mask<span class="token punctuation">,</span>A<span class="token punctuation">,</span>B<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[[1,1,0],[1,0,0],[1,1,0]]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>scatter_nd</strong><br>只用于全0的底板进行更新</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#一维更新</span>indices<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>updates<span class="token operator">-</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span>shape<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#1x8 全为0</span>tf<span class="token punctuation">.</span>scatter_nd<span class="token punctuation">(</span>indices<span class="token punctuation">,</span>updates<span class="token punctuation">,</span>shape<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#[0.11,0,10,9,0,0,12]</span><span class="token comment" spellcheck="true">#多维更新同理</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>meshgrid</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#numpy</span>points<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> y <span class="token keyword">in</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">for</span> x <span class="token keyword">in</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    points<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>points<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#tf</span>y<span class="token operator">=</span>tf<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>x<span class="token operator">=</span>tf<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>points_x<span class="token punctuation">,</span>points_y<span class="token operator">=</span>tf<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>points_x<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#[5,5]</span>points_x <span class="token comment" spellcheck="true">#所有点x部分</span>points_y <span class="token comment" spellcheck="true">#所有点y部分</span>points<span class="token operator">=</span>tf<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">[</span>points_x<span class="token punctuation">,</span>points_y<span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#绘制三维图</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="16-数据加载"><a href="#16-数据加载" class="headerlink" title="16.数据加载"></a>16.数据加载</h2><p><strong>keras.datasets</strong></p><ul><li>boston housing</li><li>mnist/fashion mnist</li><li>cifar10/100</li><li>imdb #nlp<pre class="line-numbers language-python"><code class="language-python"><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span><span class="token operator">=</span>keras<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>mnist<span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#numpy</span>x<span class="token punctuation">.</span>shaoe <span class="token comment" spellcheck="true">#(60000,28,28)</span>y<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#(60000,)  0-9</span>x<span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>x<span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#0 ,255</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>y[:2] #[5,0]<br>y_onehot=tf.one_hot(y,depth=10)<br>y_onehot[:2] #[[0,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,0,0,0,0,]]</p><pre><code>**tf.data.Dataset** #转换为tensor```python(x,y),(x_test,y_test)=keras.datasets.cifar10.load_data()#50k   10kdb=tf.data.Dataset.from_tensor_slice(x_test，y_test)next(iter(db))[0].shape #tensor [32,32,3]#shuffle 随机打散db=db.shuffle(10000)#数据预处理def preprocess(x,y):    x=tf.cast(x,dtype=tf.float32)/255  #变为0-1    y=tf.cast(y,dtype=tf.int32)    y=tf.one_hot(y,depth=10)    return x,ydb2=db.map(preprocess)res=next(iter(db2))res[0].shape,res[1].shape #tensor [32,32,3]  [1,10]db3=db2.batch(32)res=next(iter(db3))res[0].shape,res[1].shape #tensor [32,32,32,3]  [32,1,10]db4=db3.repeat(2)</code></pre><p>标准预处理流程</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">preprocess</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    x<span class="token operator">=</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>x<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">255</span>  <span class="token comment" spellcheck="true">#变为0-1</span>    y<span class="token operator">=</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>y<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>    <span class="token keyword">return</span> x<span class="token punctuation">,</span>y<span class="token keyword">def</span> <span class="token function">minst_dataset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span><span class="token operator">=</span>keras<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>fashion_mnist<span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span>    y<span class="token operator">=</span>tf<span class="token punctuation">.</span>one_hot<span class="token punctuation">(</span>y<span class="token punctuation">,</span>depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    y_test <span class="token operator">=</span>tf<span class="token punctuation">.</span>one_hot<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    ds<span class="token operator">=</span>tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slice<span class="token punctuation">(</span>x，y<span class="token punctuation">)</span>    ds<span class="token operator">=</span>ds<span class="token punctuation">.</span>map<span class="token punctuation">(</span>preprocess<span class="token punctuation">)</span>    ds<span class="token operator">=</span>ds<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span><span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">.</span>batch<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    ds_test<span class="token operator">=</span>tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slice<span class="token punctuation">(</span>x_test，y_test<span class="token punctuation">)</span>    ds_test<span class="token operator">=</span>ds<span class="token punctuation">.</span>map<span class="token punctuation">(</span>preprocess<span class="token punctuation">)</span>    ds_test<span class="token operator">=</span>ds<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span><span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">.</span>batch<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ds<span class="token punctuation">,</span>ds_test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="17-全连接层"><a href="#17-全连接层" class="headerlink" title="17.全连接层"></a>17.全连接层</h2><p>矩阵运算 转换为 全连接层包括input hidden output<br>神经元x  连接w</p><pre class="line-numbers language-python"><code class="language-python">x<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">784</span><span class="token punctuation">]</span><span class="token punctuation">)</span>net<span class="token operator">=</span>tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>out<span class="token operator">=</span>net<span class="token punctuation">(</span>x<span class="token punctuation">)</span>out<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#9=([4,521])</span>net<span class="token punctuation">.</span>kernel<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>net<span class="token punctuation">.</span>bias<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true">#[784,512],[512]</span><span class="token comment" spellcheck="true">#Multi-layers</span>model<span class="token operator">=</span>keras<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf <span class="token keyword">from</span>     tensorflow <span class="token keyword">import</span> kerasx <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>model <span class="token operator">=</span> keras<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>        keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>build<span class="token punctuation">(</span>input_shape<span class="token operator">=</span><span class="token punctuation">[</span>None<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>summary<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> p <span class="token keyword">in</span> model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>name<span class="token punctuation">,</span> p<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="18-输出方式"><a href="#18-输出方式" class="headerlink" title="18.输出方式"></a>18.输出方式</h2><p>tf.sigmoid() 压缩到0-1<br>tf.nn.softmax()  e的yi方/sum(e的yi方) 压缩到总概率和为1<br>tf.tanh 压缩到(-1,1)</p><h2 id="19-损失函数"><a href="#19-损失函数" class="headerlink" title="19.损失函数"></a>19.损失函数</h2><p><strong>MSE</strong>  (Mean Squaared Error 均方差) loss=1/N sum((y-out)**2)</p><pre class="line-numbers language-python"><code class="language-python">y<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>y<span class="token operator">=</span>tf<span class="token punctuation">.</span>one_hot<span class="token punctuation">(</span>y<span class="token punctuation">,</span>depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>y<span class="token operator">=</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>y<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>out<span class="token operator">=</span>tf<span class="token punctuation">.</span>ranfom<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>loss1<span class="token operator">=</span>tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>square<span class="token punctuation">(</span>y<span class="token operator">-</span>out<span class="token punctuation">)</span><span class="token punctuation">)</span>loss2<span class="token operator">=</span>tf<span class="token punctuation">.</span>square<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>y<span class="token operator">-</span>out<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span>loss3<span class="token operator">=</span>tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>MSE<span class="token punctuation">(</span>y<span class="token punctuation">,</span>out<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Entropy</strong> 数字大，稳定   数字小，不均等</p><pre class="line-numbers language-python"><code class="language-python">a<span class="token operator">=</span>tf<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">)</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">/</span>tf<span class="token punctuation">.</span>mat<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#PlogP</span>tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>a<span class="token operator">*</span>tf<span class="token punctuation">.</span>matf<span class="token punctuation">.</span>log<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">/</span>tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#2</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>a<span class="token operator">*</span>tf<span class="token punctuation">.</span>matf<span class="token punctuation">.</span>log<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">/</span>tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#1.35677</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Cross Entropy</strong>交叉熵</p><pre class="line-numbers language-python"><code class="language-python">tf<span class="token punctuation">.</span>losser<span class="token punctuation">.</span>categorical_crossentrop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0.25</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">]</span><span class="token punctuation">)</span>criteon<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.7</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>BinaryCrossentropy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>tf<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>categorical_crossentrop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>logits<span class="token punctuation">,</span>from_logits<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="20-梯度下降"><a href="#20-梯度下降" class="headerlink" title="20.梯度下降"></a>20.梯度下降</h2><p>梯度方向代表函数增大的方向 </p><pre class="line-numbers language-python"><code class="language-python">w<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">)</span>x<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">)</span>With tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span>    tape<span class="token punctuation">.</span>watch<span class="token punctuation">(</span><span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">)</span>    y2<span class="token operator">=</span>x<span class="token operator">*</span>wgrda2<span class="token operator">=</span>tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>y2<span class="token punctuation">,</span><span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#2</span>With tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span>persistent<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="21-函数优化"><a href="#21-函数优化" class="headerlink" title="21.函数优化"></a>21.函数优化</h2><p>Himmelblau function</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span>  numpy <span class="token keyword">as</span> np<span class="token keyword">from</span>    mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">import</span> Axes3D<span class="token keyword">from</span>    matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span>  tensorflow <span class="token keyword">as</span> tf<span class="token keyword">def</span> <span class="token function">himmelblau</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'x,y range:'</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>X<span class="token punctuation">,</span> Y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'X,Y maps:'</span><span class="token punctuation">,</span> X<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> Y<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>Z <span class="token operator">=</span> himmelblau<span class="token punctuation">(</span><span class="token punctuation">[</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">]</span><span class="token punctuation">)</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'himmelblau'</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> fig<span class="token punctuation">.</span>gca<span class="token punctuation">(</span>projection<span class="token operator">=</span><span class="token string">'3d'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>plot_surface<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>view_init<span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 初始位置不同 对应结果不同</span>x <span class="token operator">=</span> tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> step <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span>        tape<span class="token punctuation">.</span>watch<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span>        y <span class="token operator">=</span> himmelblau<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    grads <span class="token operator">=</span> tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>     x <span class="token operator">-=</span> <span class="token number">0.01</span><span class="token operator">*</span>grads    <span class="token keyword">if</span> step <span class="token operator">%</span> <span class="token number">20</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'step {}: x = {}, f(x) = {}'</span>               <span class="token punctuation">.</span>format<span class="token punctuation">(</span>step<span class="token punctuation">,</span> x<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="fashion-mnist实战"><a href="#fashion-mnist实战" class="headerlink" title="fashion mnist实战"></a>fashion mnist实战</h2><h2 id="23-tensorboard-数据可视化"><a href="#23-tensorboard-数据可视化" class="headerlink" title="23.tensorboard 数据可视化"></a>23.tensorboard 数据可视化</h2><p>使用 pytorch visdom </p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#喂数据</span>current_time <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y%m%d-%H%M%S"</span><span class="token punctuation">)</span>log_dir <span class="token operator">=</span> <span class="token string">'logs/'</span> <span class="token operator">+</span> current_timesummary_writer <span class="token operator">=</span> tf<span class="token punctuation">.</span>summary<span class="token punctuation">.</span>create_file_writer<span class="token punctuation">(</span>log_dir<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#进入到logs目录</span>tenosrboard <span class="token operator">-</span><span class="token operator">-</span>logdir logs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="24-keras高级API"><a href="#24-keras高级API" class="headerlink" title="24.keras高级API"></a>24.keras高级API</h2><p>主要功能 datasets / layers / losses / metrics / optimizers<br><strong>metrics</strong></p><pre class="line-numbers language-python"><code class="language-python">acc_meter <span class="token operator">=</span> metrics<span class="token punctuation">.</span>Accuracy<span class="token punctuation">(</span><span class="token punctuation">)</span>loss_meter <span class="token operator">=</span> metrics<span class="token punctuation">.</span>Mean<span class="token punctuation">(</span><span class="token punctuation">)</span>loss_meter<span class="token punctuation">.</span>update_state<span class="token punctuation">(</span>loss<span class="token punctuation">)</span>acc_meter<span class="token punctuation">.</span>update_state<span class="token punctuation">(</span>y<span class="token punctuation">,</span> pred<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>step<span class="token punctuation">,</span> <span class="token string">'loss:'</span><span class="token punctuation">,</span> loss_meter<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> loss_meter<span class="token punctuation">.</span>reset_states<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>compile / fit / evaluate / predict</p><pre class="line-numbers language-python"><code class="language-python">network<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>optimizer<span class="token operator">=</span>optimizers<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>lr<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        loss<span class="token operator">=</span>tf<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>CategoricalCrossentropy<span class="token punctuation">(</span>from_logits<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'accuracy'</span><span class="token punctuation">]</span>    <span class="token punctuation">)</span>network<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>db<span class="token punctuation">,</span> epochs<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> validation_data<span class="token operator">=</span>ds_val<span class="token punctuation">,</span> validation_freq<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#2个epoch测试</span>network<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span>ds_val<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#训练过程中验证</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="25-自定义网络层"><a href="#25-自定义网络层" class="headerlink" title="25.自定义网络层"></a>25.自定义网络层</h2><ul><li><p>keras.Swquential</p></li><li><p>keras.layers.Layer</p></li><li><p>keras.Model</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MyDense</span><span class="token punctuation">(</span>layers<span class="token punctuation">.</span>Layer<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inp_dim<span class="token punctuation">,</span> outp_dim<span class="token punctuation">)</span><span class="token punctuation">:</span>      super<span class="token punctuation">(</span>MyDense<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>      self<span class="token punctuation">.</span>kernel <span class="token operator">=</span> self<span class="token punctuation">.</span>add_variable<span class="token punctuation">(</span><span class="token string">'w'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>inp_dim<span class="token punctuation">,</span> outp_dim<span class="token punctuation">]</span><span class="token punctuation">)</span>      self<span class="token punctuation">.</span>bias <span class="token operator">=</span> self<span class="token punctuation">.</span>add_variable<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>outp_dim<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">call</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inputs<span class="token punctuation">,</span> training<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>      out <span class="token operator">=</span> inputs @ self<span class="token punctuation">.</span>kernel <span class="token operator">+</span> self<span class="token punctuation">.</span>bias      <span class="token keyword">return</span> out <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>class MyModel(keras.Model):</p><pre><code>def __init__(self):    super(MyModel, self).__init__()    self.fc1 = MyDense(28*28, 256)    self.fc2 = MyDense(256, 128)    self.fc3 = MyDense(128, 64)    self.fc4 = MyDense(64, 32)    self.fc5 = MyDense(32, 10)def call(self, inputs, training=None):    x = self.fc1(inputs)    x = tf.nn.relu(x)    x = self.fc2(x)    x = tf.nn.relu(x)    x = self.fc3(x)    x = tf.nn.relu(x)    x = self.fc4(x)    x = tf.nn.relu(x)    x = self.fc5(x)     return x</code></pre><pre><code>## 26.模型保存与加载- save/load weights```pythonnetwork.save_weights(&#39;weights.ckpt&#39;) #保存参数 del network#创建网络network.load_weights(&#39;weights.ckpt&#39;)</code></pre><ul><li>save/load entire model<pre class="line-numbers language-python"><code class="language-python">network<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'model.h5'</span><span class="token punctuation">)</span><span class="token keyword">del</span> network<span class="token comment" spellcheck="true">#不需要重新创建网络</span>network<span class="token punctuation">.</span>tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>models<span class="token punctuation">.</span>load_model<span class="token punctuation">(</span><span class="token string">'model.h5'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>save_model #工业环境部署<pre class="line-numbers language-python"><code class="language-python">tf<span class="token punctuation">.</span>saved_model<span class="token punctuation">.</span>save<span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token string">'/目录'</span><span class="token punctuation">)</span>imported<span class="token operator">=</span>tf<span class="token punctuation">.</span>saved_model<span class="token punctuation">.</span>load<span class="token punctuation">(</span>path<span class="token punctuation">)</span>f<span class="token operator">=</span>impored<span class="token punctuation">.</span>signatures<span class="token punctuation">[</span><span class="token string">"serving_default"</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">(</span>x<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="27-过拟合与欠拟合"><a href="#27-过拟合与欠拟合" class="headerlink" title="27.过拟合与欠拟合"></a>27.过拟合与欠拟合</h2><p>under-fitting: Estimated &lt; Ground-truth<br>train acc is bad ,test acc is bad as well.</p><p>over-fitting: Ground-truth &lt; Estimated<br>train acc is much better ,test acc is worse .<br>==&gt; Generalization Performance 泛化能力变差</p><h2 id="28-数据集划分和交叉验证"><a href="#28-数据集划分和交叉验证" class="headerlink" title="28.数据集划分和交叉验证"></a>28.数据集划分和交叉验证</h2><p>train / val / test<br>如果test做验证 调参 会造成数据泄露 泛化能力降低</p><p>k-flod cross-validation<br>把train 划分为train和val训练 之后重新划分train和val训练</p><h2 id="29-减轻过拟合的方法"><a href="#29-减轻过拟合的方法" class="headerlink" title="29.减轻过拟合的方法"></a>29.减轻过拟合的方法</h2><ul><li>more data</li><li>constraint model complexity<br>降低模型复杂度 shallow / regularization</li><li>Dropout</li><li>Data argumentation</li><li>Early Stopping</li></ul><p><strong>Regularization</strong><br>loss function 中x的高次方参数 高维特征参数趋向0 </p><p>L1-Regularization 取网络所有权值的一范数 weight decay<br>L2-Regularization 取网络所有权值的二范数</p><p><strong>动量与学习率衰减</strong><br>momentum<br>当前的梯度方向加入动量 有利于找到最优解</p><p>learning rate decay<br>太小运算过慢 太大不收敛</p><h2 id="30-training-tricks"><a href="#30-training-tricks" class="headerlink" title="30.training tricks"></a>30.training tricks</h2><ul><li>Early Stopping<br>提前停止训练 防止过拟合<br>validation set to select parameters<br>monitor validation performance<br>stop at the highest val performance</li><li>Dropout<br>learning less to learn better 减少全连接层之间的链接</li><li>Stochastic Gradient Descent<br>取一个batch的梯度</li></ul><h2 id="31-卷积神经网络"><a href="#31-卷积神经网络" class="headerlink" title="31.卷积神经网络"></a>31.卷积神经网络</h2><p>Receptive Field # 类似人的眼睛 第一眼只看到感兴趣区域 通过扫描 滑动窗口获得全部信息</p><p>卷积核： 权值共享 滑动窗口 减少参数量</p><p>[b,5,5,c] =&gt; [c,3，3] kernel =&gt; [b,3,3,1] #图像c个通道 对应元素相乘累加<br>保持输入输出shape一致 padding &amp; stride(步长)</p><p>[b,5,5,c] =&gt; [n,c,3,3] n个kernel =&gt; [b,3,3,n] #多通道输入多通道输出</p><p>layers.kernal #[3,3,c,n]</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span> tensprflow<span class="token punctuation">.</span>keras <span class="token keyword">import</span> lyerslayer<span class="token operator">=</span>layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">)</span>layers<span class="token punctuation">.</span>kernal <span class="token comment" spellcheck="true">#[5,5,c,n]</span>layers<span class="token punctuation">.</span>bias <span class="token comment" spellcheck="true">#(4,)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="32-池化与采样"><a href="#32-池化与采样" class="headerlink" title="32.池化与采样"></a>32.池化与采样</h2><ul><li>pooling 降维过程<br>max/avg pooling 取最大/平均<br>sride <pre class="line-numbers language-python"><code class="language-python">x <span class="token comment" spellcheck="true">#[1,14,14,4]</span>pool<span class="token operator">=</span>layers<span class="token punctuation">.</span>MaxPool2D<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>strides<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>out<span class="token operator">=</span>pool<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># tensorshape [1,7,7,4]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>out=tf.nn.max_pool2d(x,2,strides=2,padding=’VALID’)</p><pre><code>- unsample 升维```pythonx=tf.random.normal([1,7,7,4])layer=layers.UnSampling2D(size=3)out=layer(x)# tensorshape [1,21,21,4]</code></pre><ul><li>ReLU 同relu函数</li></ul>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS调用cv_bridge问题</title>
      <link href="/2020/03/14/ros-diao-yong-cv-bridge-wen-ti/"/>
      <url>/2020/03/14/ros-diao-yong-cv-bridge-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="ROS调用cv-bridge问题"><a href="#ROS调用cv-bridge问题" class="headerlink" title="ROS调用cv_bridge问题"></a>ROS调用cv_bridge问题</h1><h2 id="问题报错"><a href="#问题报错" class="headerlink" title="问题报错"></a>问题报错</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> cv_bridge<span class="token punctuation">.</span>boost<span class="token punctuation">.</span>cv_bridge_boost <span class="token keyword">import</span> getCvTypeImportError<span class="token punctuation">:</span> dynamic module does <span class="token operator">not</span> define module export function <span class="token punctuation">(</span>PyInit_cv_bridge_boost<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="http://www.programmersought.com/article/4908420840/" target="_blank" rel="noopener">解决方案</a>:使用Python3编译cv_bridge</p><h2 id="1-新建ROS工作区"><a href="#1-新建ROS工作区" class="headerlink" title="1. 新建ROS工作区"></a>1. 新建ROS工作区</h2><pre class="line-numbers language-shell"><code class="language-shell">mkdir cv_bridgecd cv_bridgecatkin init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-注意配置本地python环境，虚拟环境编译无效"><a href="#2-注意配置本地python环境，虚拟环境编译无效" class="headerlink" title="2. 注意配置本地python环境，虚拟环境编译无效"></a>2. 注意配置本地python环境，虚拟环境编译无效</h2><pre class="line-numbers language-bash"><code class="language-bash">catkin config -DPYTHON_EXECUTABLE<span class="token operator">=</span>/usr/bin/python3 -DPYTHON_INCLUDE_DIR<span class="token operator">=</span>/usr/include/python3.5m -DPYTHON_LIBRARY<span class="token operator">=</span>/usr/lib/x86_64-linux-gnu/libpython3.5m.so <span class="token comment" spellcheck="true">#寻找对应位置</span>catkin config --install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-下载cv-bridge并编译"><a href="#3-下载cv-bridge并编译" class="headerlink" title="3. 下载cv_bridge并编译"></a>3. 下载cv_bridge并编译</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/ros-perception/vision_opencv.git src/vision_opencvapt-cache show ros-melodic-cv-bridge <span class="token operator">|</span> <span class="token function">grep</span> Version    Version: 1.12.8-0xenial-20180416-143935-0800 <span class="token comment" spellcheck="true">#版本不一定</span><span class="token function">cd</span> src/vision_opencv/<span class="token function">git</span> checkout 1.12.8<span class="token function">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token comment" spellcheck="true"># Build</span>catkin build cv_bridge<span class="token comment" spellcheck="true"># Extend environment with new package</span><span class="token function">source</span> install/setup.bash --extend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="可放入-bashrc文件"><a href="#可放入-bashrc文件" class="headerlink" title="可放入~/.bashrc文件"></a>可放入~/.bashrc文件</h2><p>source devel/setup.bash</p>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opencv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow object detection API 训练自己的数据集</title>
      <link href="/2020/03/14/tensorflow-object-detection-api-xun-lian-zi-ji-de-shu-ju-ji/"/>
      <url>/2020/03/14/tensorflow-object-detection-api-xun-lian-zi-ji-de-shu-ju-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="tensorflow-object-detection-API-训练数据集"><a href="#tensorflow-object-detection-API-训练数据集" class="headerlink" title="tensorflow object detection API 训练数据集"></a>tensorflow object detection API 训练数据集</h1><h2 id="1-API的安装"><a href="#1-API的安装" class="headerlink" title="1. API的安装"></a>1. API的安装</h2><p><a href="https://github.com/tensorflow/models" target="_blank" rel="noopener">官方github地址</a><br>下载object_detection和slim文件内容<br>安装可参照<a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md" target="_blank" rel="noopener">官方文档</a></p><h2 id="2-制作tfrecord数据集"><a href="#2-制作tfrecord数据集" class="headerlink" title="2. 制作tfrecord数据集"></a>2. 制作tfrecord数据集</h2><h3 id="a-voc2007-to-tfrecord"><a href="#a-voc2007-to-tfrecord" class="headerlink" title="a. voc2007_to_tfrecord"></a>a. voc2007_to_tfrecord</h3><p>首先制作voc数据集 通过dataset_tools/create_pascal_tf_record.py进行转换</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Copyright 2017 The TensorFlow Authors. All Rights Reserved.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># Licensed under the Apache License, Version 2.0 (the "License");</span><span class="token comment" spellcheck="true"># you may not use this file except in compliance with the License.</span><span class="token comment" spellcheck="true"># You may obtain a copy of the License at</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#     http://www.apache.org/licenses/LICENSE-2.0</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># Unless required by applicable law or agreed to in writing, software</span><span class="token comment" spellcheck="true"># distributed under the License is distributed on an "AS IS" BASIS,</span><span class="token comment" spellcheck="true"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><span class="token comment" spellcheck="true"># See the License for the specific language governing permissions and</span><span class="token comment" spellcheck="true"># limitations under the License.</span><span class="token comment" spellcheck="true"># ==============================================================================</span><span class="token triple-quoted-string string">"""Convert raw PASCAL dataset to TFRecord for object_detection.Example usage:    #下方代码用于生产tfrecord文件，根据文件目录相应调整。    python create_pascal_tf_record.py  --data_dir=/home/huazhe/VOCdevkit  --year=VOC2007  --output_path=pascal.record"""</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> absolute_import<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> division<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> print_function<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> io<span class="token keyword">import</span> logging<span class="token keyword">import</span> os<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token keyword">import</span> PIL<span class="token punctuation">.</span>Image<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span> object_detection<span class="token punctuation">.</span>utils <span class="token keyword">import</span> dataset_util<span class="token keyword">from</span> object_detection<span class="token punctuation">.</span>utils <span class="token keyword">import</span> label_map_utilflags <span class="token operator">=</span> tf<span class="token punctuation">.</span>app<span class="token punctuation">.</span>flagsflags<span class="token punctuation">.</span>DEFINE_string<span class="token punctuation">(</span><span class="token string">'data_dir'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'Root directory to raw PASCAL VOC dataset.'</span><span class="token punctuation">)</span>flags<span class="token punctuation">.</span>DEFINE_string<span class="token punctuation">(</span><span class="token string">'set'</span><span class="token punctuation">,</span> <span class="token string">'train'</span><span class="token punctuation">,</span> <span class="token string">'Convert training set, validation set or '</span>                    <span class="token string">'merged set.'</span><span class="token punctuation">)</span>flags<span class="token punctuation">.</span>DEFINE_string<span class="token punctuation">(</span><span class="token string">'annotations_dir'</span><span class="token punctuation">,</span> <span class="token string">'Annotations'</span><span class="token punctuation">,</span>                    <span class="token string">'(Relative) path to annotations directory.'</span><span class="token punctuation">)</span>flags<span class="token punctuation">.</span>DEFINE_string<span class="token punctuation">(</span><span class="token string">'year'</span><span class="token punctuation">,</span> <span class="token string">'VOC2007'</span><span class="token punctuation">,</span> <span class="token string">'Desired challenge year.'</span><span class="token punctuation">)</span>flags<span class="token punctuation">.</span>DEFINE_string<span class="token punctuation">(</span><span class="token string">'output_path'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'Path to output TFRecord'</span><span class="token punctuation">)</span>flags<span class="token punctuation">.</span>DEFINE_string<span class="token punctuation">(</span><span class="token string">'label_map_path'</span><span class="token punctuation">,</span> <span class="token string">'person_label_map.pbtxt'</span><span class="token punctuation">,</span>                    <span class="token string">'Path to label map proto'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#person_label_map.pbtxt文件位置调整</span>flags<span class="token punctuation">.</span>DEFINE_boolean<span class="token punctuation">(</span><span class="token string">'ignore_difficult_instances'</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'Whether to ignore '</span>                     <span class="token string">'difficult instances'</span><span class="token punctuation">)</span>FLAGS <span class="token operator">=</span> flags<span class="token punctuation">.</span>FLAGSSETS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'train'</span><span class="token punctuation">,</span> <span class="token string">'val'</span><span class="token punctuation">,</span> <span class="token string">'trainval'</span><span class="token punctuation">,</span> <span class="token string">'test'</span><span class="token punctuation">]</span>YEARS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'VOC2007'</span><span class="token punctuation">,</span> <span class="token string">'VOC2012'</span><span class="token punctuation">,</span> <span class="token string">'merged'</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">dict_to_tf_example</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>                       dataset_directory<span class="token punctuation">,</span>                       label_map_dict<span class="token punctuation">,</span>                       ignore_difficult_instances<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>                       image_subdirectory<span class="token operator">=</span><span class="token string">'JPEGImages'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token triple-quoted-string string">"""Convert XML derived dict to tf.Example proto.  Notice that this function normalizes the bounding box coordinates provided  by the raw data.  Args:    data: dict holding PASCAL XML fields for a single image (obtained by      running dataset_util.recursive_parse_xml_to_dict)    dataset_directory: Path to root directory holding PASCAL dataset    label_map_dict: A map from string label names to integers ids.    ignore_difficult_instances: Whether to skip difficult instances in the      dataset  (default: False).    image_subdirectory: String specifying subdirectory within the      PASCAL dataset directory holding the actual image data.  Returns:    example: The converted tf.Example.  Raises:    ValueError: if the image pointed to by data['filename'] is not a valid JPEG  """</span>  img_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">'VOC2007'</span><span class="token punctuation">,</span> image_subdirectory<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#调整对应图片存放路径</span>  full_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dataset_directory<span class="token punctuation">,</span> img_path<span class="token punctuation">)</span>  <span class="token keyword">with</span> tf<span class="token punctuation">.</span>gfile<span class="token punctuation">.</span>GFile<span class="token punctuation">(</span>full_path<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fid<span class="token punctuation">:</span>    encoded_jpg <span class="token operator">=</span> fid<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  encoded_jpg_io <span class="token operator">=</span> io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span>encoded_jpg<span class="token punctuation">)</span>  image <span class="token operator">=</span> PIL<span class="token punctuation">.</span>Image<span class="token punctuation">.</span>open<span class="token punctuation">(</span>encoded_jpg_io<span class="token punctuation">)</span>  <span class="token keyword">if</span> image<span class="token punctuation">.</span>format <span class="token operator">!=</span> <span class="token string">'JPEG'</span><span class="token punctuation">:</span>    <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">'Image format not JPEG'</span><span class="token punctuation">)</span>  key <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span>encoded_jpg<span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>  width <span class="token operator">=</span> int<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'width'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  height <span class="token operator">=</span> int<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'height'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  xmin <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  ymin <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  xmax <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  ymax <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  classes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  classes_text <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  truncated <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  poses <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  difficult_obj <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> <span class="token string">'object'</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>    <span class="token keyword">for</span> obj <span class="token keyword">in</span> data<span class="token punctuation">[</span><span class="token string">'object'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>      difficult <span class="token operator">=</span> bool<span class="token punctuation">(</span>int<span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'difficult'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> ignore_difficult_instances <span class="token operator">and</span> difficult<span class="token punctuation">:</span>        <span class="token keyword">continue</span>      difficult_obj<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>difficult<span class="token punctuation">)</span><span class="token punctuation">)</span>      xmin<span class="token punctuation">.</span>append<span class="token punctuation">(</span>float<span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'bndbox'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'xmin'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> width<span class="token punctuation">)</span>      ymin<span class="token punctuation">.</span>append<span class="token punctuation">(</span>float<span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'bndbox'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ymin'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> height<span class="token punctuation">)</span>      xmax<span class="token punctuation">.</span>append<span class="token punctuation">(</span>float<span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'bndbox'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'xmax'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> width<span class="token punctuation">)</span>      ymax<span class="token punctuation">.</span>append<span class="token punctuation">(</span>float<span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'bndbox'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ymax'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> height<span class="token punctuation">)</span>      classes_text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      classes<span class="token punctuation">.</span>append<span class="token punctuation">(</span>label_map_dict<span class="token punctuation">[</span>obj<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      truncated<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'truncated'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      poses<span class="token punctuation">.</span>append<span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'pose'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  example <span class="token operator">=</span> tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span>Example<span class="token punctuation">(</span>features<span class="token operator">=</span>tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span>Features<span class="token punctuation">(</span>feature<span class="token operator">=</span><span class="token punctuation">{</span>      <span class="token string">'image/height'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>int64_feature<span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/width'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>int64_feature<span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/filename'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>bytes_feature<span class="token punctuation">(</span>          data<span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/source_id'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>bytes_feature<span class="token punctuation">(</span>          data<span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/key/sha256'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>bytes_feature<span class="token punctuation">(</span>key<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/encoded'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>bytes_feature<span class="token punctuation">(</span>encoded_jpg<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/format'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>bytes_feature<span class="token punctuation">(</span><span class="token string">'jpeg'</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/object/bbox/xmin'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>float_list_feature<span class="token punctuation">(</span>xmin<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/object/bbox/xmax'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>float_list_feature<span class="token punctuation">(</span>xmax<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/object/bbox/ymin'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>float_list_feature<span class="token punctuation">(</span>ymin<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/object/bbox/ymax'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>float_list_feature<span class="token punctuation">(</span>ymax<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/object/class/text'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>bytes_list_feature<span class="token punctuation">(</span>classes_text<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/object/class/label'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>int64_list_feature<span class="token punctuation">(</span>classes<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/object/difficult'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>int64_list_feature<span class="token punctuation">(</span>difficult_obj<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/object/truncated'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>int64_list_feature<span class="token punctuation">(</span>truncated<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'image/object/view'</span><span class="token punctuation">:</span> dataset_util<span class="token punctuation">.</span>bytes_list_feature<span class="token punctuation">(</span>poses<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> example<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">if</span> FLAGS<span class="token punctuation">.</span>set <span class="token operator">not</span> <span class="token keyword">in</span> SETS<span class="token punctuation">:</span>    <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">'set must be in : {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>SETS<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> FLAGS<span class="token punctuation">.</span>year <span class="token operator">not</span> <span class="token keyword">in</span> YEARS<span class="token punctuation">:</span>    <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">'year must be in : {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>YEARS<span class="token punctuation">)</span><span class="token punctuation">)</span>  data_dir <span class="token operator">=</span> FLAGS<span class="token punctuation">.</span>data_dir  years <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'VOC2007'</span><span class="token punctuation">,</span> <span class="token string">'VOC2012'</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> FLAGS<span class="token punctuation">.</span>year <span class="token operator">!=</span> <span class="token string">'merged'</span><span class="token punctuation">:</span>    years <span class="token operator">=</span> <span class="token punctuation">[</span>FLAGS<span class="token punctuation">.</span>year<span class="token punctuation">]</span>  writer <span class="token operator">=</span> tf<span class="token punctuation">.</span>python_io<span class="token punctuation">.</span>TFRecordWriter<span class="token punctuation">(</span>FLAGS<span class="token punctuation">.</span>output_path<span class="token punctuation">)</span>  label_map_dict <span class="token operator">=</span> label_map_util<span class="token punctuation">.</span>get_label_map_dict<span class="token punctuation">(</span>FLAGS<span class="token punctuation">.</span>label_map_path<span class="token punctuation">)</span>  <span class="token keyword">for</span> year <span class="token keyword">in</span> years<span class="token punctuation">:</span>    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'Reading from PASCAL %s dataset.'</span><span class="token punctuation">,</span> year<span class="token punctuation">)</span>    examples_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>data_dir<span class="token punctuation">,</span> year<span class="token punctuation">,</span> <span class="token string">'ImageSets'</span><span class="token punctuation">,</span> <span class="token string">'Main'</span><span class="token punctuation">,</span>                                 FLAGS<span class="token punctuation">.</span>set <span class="token operator">+</span> <span class="token string">'.txt'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#对应到相应txt文件</span>    annotations_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>data_dir<span class="token punctuation">,</span> year<span class="token punctuation">,</span> FLAGS<span class="token punctuation">.</span>annotations_dir<span class="token punctuation">)</span>    examples_list <span class="token operator">=</span> dataset_util<span class="token punctuation">.</span>read_examples_list<span class="token punctuation">(</span>examples_path<span class="token punctuation">)</span>    <span class="token keyword">for</span> idx<span class="token punctuation">,</span> example <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>examples_list<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">if</span> idx <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'On image %d of %d'</span><span class="token punctuation">,</span> idx<span class="token punctuation">,</span> len<span class="token punctuation">(</span>examples_list<span class="token punctuation">)</span><span class="token punctuation">)</span>      path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>annotations_dir<span class="token punctuation">,</span> example <span class="token operator">+</span> <span class="token string">'.xml'</span><span class="token punctuation">)</span>      <span class="token keyword">with</span> tf<span class="token punctuation">.</span>gfile<span class="token punctuation">.</span>GFile<span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fid<span class="token punctuation">:</span>        xml_str <span class="token operator">=</span> fid<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>      xml <span class="token operator">=</span> etree<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>xml_str<span class="token punctuation">)</span>      data <span class="token operator">=</span> dataset_util<span class="token punctuation">.</span>recursive_parse_xml_to_dict<span class="token punctuation">(</span>xml<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'annotation'</span><span class="token punctuation">]</span>      tf_example <span class="token operator">=</span> dict_to_tf_example<span class="token punctuation">(</span>data<span class="token punctuation">,</span> FLAGS<span class="token punctuation">.</span>data_dir<span class="token punctuation">,</span> label_map_dict<span class="token punctuation">,</span>                                      FLAGS<span class="token punctuation">.</span>ignore_difficult_instances<span class="token punctuation">)</span>      writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>tf_example<span class="token punctuation">.</span>SerializeToString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>  tf<span class="token punctuation">.</span>app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="b-tfrecord制作"><a href="#b-tfrecord制作" class="headerlink" title="b. tfrecord制作"></a>b. tfrecord制作</h3><p>首先通过xml_to_csv.py将数据集转换为csv文件，让后通过generate_tfrecord.py生成tfrecord。</p><h2 id="3-训练准备"><a href="#3-训练准备" class="headerlink" title="3. 训练准备"></a>3. 训练准备</h2><h3 id="a-下载预训练模型"><a href="#a-下载预训练模型" class="headerlink" title="a. 下载预训练模型"></a>a. 下载<a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md" target="_blank" rel="noopener">预训练模型</a></h3><h3 id="b-config文件修改"><a href="#b-config文件修改" class="headerlink" title="b. config文件修改"></a>b. config文件修改</h3><p>在sample/configs/下</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Faster R-CNN with Inception v2, configuration for MSCOCO Dataset.</span><span class="token comment" spellcheck="true"># Users should configure the fine_tune_checkpoint field in the train config as</span><span class="token comment" spellcheck="true"># well as the label_map_path and input_path fields in the train_input_reader and</span><span class="token comment" spellcheck="true"># eval_input_reader. Search for "PATH_TO_BE_CONFIGURED" to find the fields that</span><span class="token comment" spellcheck="true"># should be configured.</span>model <span class="token punctuation">{</span>  faster_rcnn <span class="token punctuation">{</span>    num_classes<span class="token punctuation">:</span> <span class="token number">1</span>        <span class="token comment" spellcheck="true"># 修改这里 改成自己的类数</span>    image_resizer <span class="token punctuation">{</span>      keep_aspect_ratio_resizer <span class="token punctuation">{</span>        min_dimension<span class="token punctuation">:</span> <span class="token number">600</span>        max_dimension<span class="token punctuation">:</span> <span class="token number">1024</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    feature_extractor <span class="token punctuation">{</span>      type<span class="token punctuation">:</span> <span class="token string">'faster_rcnn_inception_v2'</span>      first_stage_features_stride<span class="token punctuation">:</span> <span class="token number">16</span>    <span class="token punctuation">}</span>    first_stage_anchor_generator <span class="token punctuation">{</span>      grid_anchor_generator <span class="token punctuation">{</span>        scales<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">]</span>        aspect_ratios<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">]</span>        height_stride<span class="token punctuation">:</span> <span class="token number">16</span>        width_stride<span class="token punctuation">:</span> <span class="token number">16</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    first_stage_box_predictor_conv_hyperparams <span class="token punctuation">{</span>      op<span class="token punctuation">:</span> CONV      regularizer <span class="token punctuation">{</span>        l2_regularizer <span class="token punctuation">{</span>          weight<span class="token punctuation">:</span> <span class="token number">0.0</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      initializer <span class="token punctuation">{</span>        truncated_normal_initializer <span class="token punctuation">{</span>          stddev<span class="token punctuation">:</span> <span class="token number">0.01</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    first_stage_nms_score_threshold<span class="token punctuation">:</span> <span class="token number">0.0</span>    first_stage_nms_iou_threshold<span class="token punctuation">:</span> <span class="token number">0.7</span>    first_stage_max_proposals<span class="token punctuation">:</span> <span class="token number">300</span>    first_stage_localization_loss_weight<span class="token punctuation">:</span> <span class="token number">2.0</span>    first_stage_objectness_loss_weight<span class="token punctuation">:</span> <span class="token number">1.0</span>    initial_crop_size<span class="token punctuation">:</span> <span class="token number">14</span>    maxpool_kernel_size<span class="token punctuation">:</span> <span class="token number">2</span>    maxpool_stride<span class="token punctuation">:</span> <span class="token number">2</span>    second_stage_box_predictor <span class="token punctuation">{</span>      mask_rcnn_box_predictor <span class="token punctuation">{</span>        use_dropout<span class="token punctuation">:</span> false        dropout_keep_probability<span class="token punctuation">:</span> <span class="token number">1.0</span>        fc_hyperparams <span class="token punctuation">{</span>          op<span class="token punctuation">:</span> FC          regularizer <span class="token punctuation">{</span>            l2_regularizer <span class="token punctuation">{</span>              weight<span class="token punctuation">:</span> <span class="token number">0.0</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>          initializer <span class="token punctuation">{</span>            variance_scaling_initializer <span class="token punctuation">{</span>              factor<span class="token punctuation">:</span> <span class="token number">1.0</span>              uniform<span class="token punctuation">:</span> true              mode<span class="token punctuation">:</span> FAN_AVG            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    second_stage_post_processing <span class="token punctuation">{</span>      batch_non_max_suppression <span class="token punctuation">{</span>        score_threshold<span class="token punctuation">:</span> <span class="token number">0.0</span>        iou_threshold<span class="token punctuation">:</span> <span class="token number">0.6</span>        max_detections_per_class<span class="token punctuation">:</span> <span class="token number">100</span>        max_total_detections<span class="token punctuation">:</span> <span class="token number">300</span>      <span class="token punctuation">}</span>      score_converter<span class="token punctuation">:</span> SOFTMAX    <span class="token punctuation">}</span>    second_stage_localization_loss_weight<span class="token punctuation">:</span> <span class="token number">2.0</span>    second_stage_classification_loss_weight<span class="token punctuation">:</span> <span class="token number">1.0</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 这部分为对训练过程进行微调</span>train_config<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true"># batch_size 可根据自己的显存大小调整</span>  batch_size<span class="token punctuation">:</span> <span class="token number">1</span>  optimizer <span class="token punctuation">{</span>    momentum_optimizer<span class="token punctuation">:</span> <span class="token punctuation">{</span>      learning_rate<span class="token punctuation">:</span> <span class="token punctuation">{</span>        manual_step_learning_rate <span class="token punctuation">{</span>          initial_learning_rate<span class="token punctuation">:</span> <span class="token number">0.0002</span>          schedule <span class="token punctuation">{</span>            step<span class="token punctuation">:</span> <span class="token number">900000</span>            learning_rate<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token number">00002</span>          <span class="token punctuation">}</span>          schedule <span class="token punctuation">{</span>            step<span class="token punctuation">:</span> <span class="token number">1200000</span>            learning_rate<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token number">000002</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      momentum_optimizer_value<span class="token punctuation">:</span> <span class="token number">0.9</span>    <span class="token punctuation">}</span>    use_moving_average<span class="token punctuation">:</span> false  <span class="token punctuation">}</span>  gradient_clipping_by_norm<span class="token punctuation">:</span> <span class="token number">10.0</span>  fine_tune_checkpoint<span class="token punctuation">:</span> <span class="token string">"faster_rcnn_inception_v2_coco_2018_01_28/model.ckpt"</span><span class="token comment" spellcheck="true">#对应到下载模型地址</span>  from_detection_checkpoint<span class="token punctuation">:</span> true<span class="token comment" spellcheck="true">#使用迁移学习</span>  <span class="token comment" spellcheck="true"># Note: The below line limits the training process to 200K steps, which we</span>  <span class="token comment" spellcheck="true"># empirically found to be sufficient enough to train the COCO dataset. This</span>  <span class="token comment" spellcheck="true"># effectively bypasses the learning rate schedule (the learning rate will</span>  <span class="token comment" spellcheck="true"># never decay). Remove the below line to train indefinitely.</span>  num_steps<span class="token punctuation">:</span> <span class="token number">200000</span>  data_augmentation_options <span class="token punctuation">{</span>    random_horizontal_flip <span class="token punctuation">{</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>train_input_reader<span class="token punctuation">:</span> <span class="token punctuation">{</span>  tf_record_input_reader <span class="token punctuation">{</span>    input_path<span class="token punctuation">:</span> <span class="token string">"train.record"</span><span class="token comment" spellcheck="true"># train.record路径</span>  <span class="token punctuation">}</span>  label_map_path<span class="token punctuation">:</span> <span class="token string">"label_map.pbtxt"</span><span class="token comment" spellcheck="true">## .pptxt文件地址</span><span class="token punctuation">}</span>eval_config<span class="token punctuation">:</span> <span class="token punctuation">{</span>  num_examples<span class="token punctuation">:</span> <span class="token number">1000</span>  <span class="token comment" spellcheck="true"># Note: The below line limits the evaluation process to 10 evaluations.</span>  <span class="token comment" spellcheck="true"># Remove the below line to evaluate indefinitely.</span>  max_evals<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">}</span>eval_input_reader<span class="token punctuation">:</span> <span class="token punctuation">{</span>  tf_record_input_reader <span class="token punctuation">{</span>    input_path<span class="token punctuation">:</span> <span class="token string">"val.record"</span>  <span class="token punctuation">}</span>  label_map_path<span class="token punctuation">:</span> <span class="token string">"label_map.pbtxt"</span>  shuffle<span class="token punctuation">:</span> false  num_readers<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="c-pbtxt文件"><a href="#c-pbtxt文件" class="headerlink" title="c. .pbtxt文件"></a>c. .pbtxt文件</h3><pre><code>#内容如下 data/文件夹下有模板item {  id: 1  name: &#39;person&#39;}</code></pre><h2 id="4-训练模型"><a href="#4-训练模型" class="headerlink" title="4. 训练模型"></a>4. 训练模型</h2><h3 id="a-model-main-py"><a href="#a-model-main-py" class="headerlink" title="a. model_main .py"></a>a. model_main .py</h3><pre class="line-numbers language-python"><code class="language-python">python object_detection<span class="token operator">/</span>model_main<span class="token punctuation">.</span>py  <span class="token comment" spellcheck="true">#model_main.py 对应位置</span> <span class="token operator">-</span><span class="token operator">-</span>alsologtostderr \ <span class="token operator">-</span><span class="token operator">-</span>pipeline_config_path<span class="token operator">=</span>faster_rcnn_resnet50_coco<span class="token punctuation">.</span>config \  <span class="token comment" spellcheck="true">#config文件对应位置</span> <span class="token operator">-</span><span class="token operator">-</span>model_dir<span class="token operator">=</span>save_model \ <span class="token comment" spellcheck="true">#训练模型储存位置</span> <span class="token operator">-</span><span class="token operator">-</span>num_train_steps<span class="token operator">=</span><span class="token number">50000</span> \  <span class="token operator">-</span><span class="token operator">-</span>num_eval_steps<span class="token operator">=</span><span class="token number">2000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="b-train-py-旧版-legacy"><a href="#b-train-py-旧版-legacy" class="headerlink" title="b. train .py(旧版 legacy/)"></a>b. train .py(旧版 legacy/)</h3><pre class="line-numbers language-python"><code class="language-python">python object_detection\legacy\train<span class="token punctuation">.</span>py  <span class="token operator">-</span><span class="token operator">-</span>logtostderr \ <span class="token operator">-</span><span class="token operator">-</span>train_dir<span class="token operator">=</span>save_model \ <span class="token comment" spellcheck="true">#模型保存位置</span> <span class="token operator">-</span><span class="token operator">-</span>pipeline_config_path<span class="token operator">=</span>faster_rcnn_inception_v2_coco<span class="token punctuation">.</span>config <span class="token comment" spellcheck="true">#对应config位置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-tesorboard"><a href="#5-tesorboard" class="headerlink" title="5. tesorboard"></a>5. tesorboard</h2><pre class="line-numbers language-python"><code class="language-python">tensorboard <span class="token operator">-</span><span class="token operator">-</span>logdir<span class="token operator">=</span>model <span class="token comment" spellcheck="true">#model 位置</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-模型转换"><a href="#6-模型转换" class="headerlink" title="6. 模型转换"></a>6. 模型转换</h2><pre class="line-numbers language-python"><code class="language-python">python export_inference_graph<span class="token punctuation">.</span>py \  <span class="token operator">-</span><span class="token operator">-</span>input_type image_tensor \  <span class="token operator">-</span><span class="token operator">-</span>pipeline_config_path ssd_mobilenet_v1_coco<span class="token punctuation">.</span>config \  <span class="token operator">-</span><span class="token operator">-</span>trained_checkpoint_prefix model<span class="token punctuation">.</span>ckpt<span class="token number">-100000</span> \  <span class="token comment" spellcheck="true">#这里要根据自己训练的次数修改model.ckpt-10000的数字</span> <span class="token operator">-</span><span class="token operator">-</span>output_directory person_inference_graph <span class="token comment" spellcheck="true">#输入转换后保存模型的地址</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> tensorflow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> object detection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS下intel realsense D435i安装</title>
      <link href="/2020/02/09/ros-xia-intel-realsense-d435i-an-zhuang/"/>
      <url>/2020/02/09/ros-xia-intel-realsense-d435i-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="ROS下intel-realsense-D435i安装"><a href="#ROS下intel-realsense-D435i安装" class="headerlink" title="ROS下intel realsense D435i安装"></a>ROS下intel realsense D435i安装</h1><h2 id="1-安装Realsense-SDK"><a href="#1-安装Realsense-SDK" class="headerlink" title="1.安装Realsense SDK"></a>1.安装Realsense SDK</h2><p>参考<a href="https://github.com/IntelRealSense/librealsense/blob/master/doc/installation.md" target="_blank" rel="noopener">官方文档</a></p><h3 id="a-下载librealsense-github存储库"><a href="#a-下载librealsense-github存储库" class="headerlink" title="a.下载librealsense github存储库"></a>a.下载librealsense github存储库</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/IntelRealSense/librealsense<span class="token function">cd</span> librealsense<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="b-安装构建librealsense所需的核心软件包"><a href="#b-安装构建librealsense所需的核心软件包" class="headerlink" title="b.安装构建librealsense所需的核心软件包"></a>b.安装构建librealsense所需的核心软件包</h3><p>Unplug any connected Intel RealSense camera.<br>拔出相机连接</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span> libssl-dev libusb-1.0-0-dev pkg-config libgtk-3-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>特定于发行版的软件包</p><p>Ubuntu 18:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="c-安装权限脚本"><a href="#c-安装权限脚本" class="headerlink" title="c.安装权限脚本"></a>c.安装权限脚本</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> librealsense./scripts/setup_udev_rules.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="d-构建和修补内核模块"><a href="#d-构建和修补内核模块" class="headerlink" title="d.构建和修补内核模块"></a>d.构建和修补内核模块</h3><p>这一步运行较慢，实际过程中没有使用这一步也能够使用相机。</p><pre class="line-numbers language-bash"><code class="language-bash">./scripts/patch-realsense-ubuntu-lts.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="e-编译安装"><a href="#e-编译安装" class="headerlink" title="e.编译安装"></a>e.编译安装</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">mkdir</span> build<span class="token function">cd</span> buildcmake <span class="token punctuation">..</span>/ -DBUILD_EXAMPLES<span class="token operator">=</span>true<span class="token function">make</span><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="f-test"><a href="#f-test" class="headerlink" title="f.test"></a>f.test</h3><p>进入librealsense/build/examples/capture，测试效果：</p><pre class="line-numbers language-bash"><code class="language-bash">./rs-capture <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或直接使用<code>realsense-viewer</code>工具查看效果：</p><pre class="line-numbers language-bash"><code class="language-bash">realsense-viewer<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-另一种安装方法（Distribution版）"><a href="#2-另一种安装方法（Distribution版）" class="headerlink" title="2.另一种安装方法（Distribution版）"></a>2.另一种安装方法<a href="https://github.com/IntelRealSense/librealsense/blob/master/doc/distribution_linux.md" target="_blank" rel="noopener">（Distribution版）</a></h2><h3 id="a-注册公匙"><a href="#a-注册公匙" class="headerlink" title="a.注册公匙"></a>a.注册公匙</h3><pre class="line-numbers language-shell"><code class="language-shell">sudo apt-key adv --keyserver keys.gnupg.net --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="b-添加服务器至列表"><a href="#b-添加服务器至列表" class="headerlink" title="b.添加服务器至列表"></a>b.添加服务器至列表</h3><p>Ubuntu 18 LTS:</p><pre class="line-numbers language-shell"><code class="language-shell">sudo add-apt-repository "deb http://realsense-hw-public.s3.amazonaws.com/Debian/apt-repo bionic main" -u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="c-安装库"><a href="#c-安装库" class="headerlink" title="c.安装库"></a>c.安装库</h3><pre class="line-numbers language-shell"><code class="language-shell">sudo apt-get install librealsense2-dkmssudo apt-get install librealsense2-utilssudo apt-get install librealsense2-devsudo apt-get install librealsense2-dbg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-安装RealSense-ROS"><a href="#3-安装RealSense-ROS" class="headerlink" title="3.安装RealSense-ROS"></a>3.安装RealSense-ROS</h2><p>参考<a href="https://github.com/IntelRealSense/realsense-ros" target="_blank" rel="noopener">官方文档</a></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#Create a catkin workspace</span><span class="token function">mkdir</span> -p ~/catkin_ws/src<span class="token function">cd</span> ~/catkin_ws/src/<span class="token comment" spellcheck="true">#Clone the latest Intel® RealSense™ ROS from here into 'catkin_ws/src/'</span><span class="token function">git</span> clone https://github.com/IntelRealSense/realsense-ros.git<span class="token function">git</span> clone https://github.com/pal-robotics/ddynamic_reconfigure.git <span class="token comment" spellcheck="true">#ros package ddynamic_reconfigure is installed</span>catkin_init_workspace<span class="token function">cd</span> <span class="token punctuation">..</span>catkin_make cleancatkin_make -DCATKIN_ENABLE_TESTING<span class="token operator">=</span>False -DCMAKE_BUILD_TYPE<span class="token operator">=</span>Releasecatkin_make <span class="token function">install</span><span class="token keyword">echo</span> <span class="token string">"source ~/catkin_ws/devel/setup.bash"</span> <span class="token operator">>></span> ~/.bashrc<span class="token function">source</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动相机节点</p><pre class="line-numbers language-bash"><code class="language-bash">roslaunch realsense2_camera rs_rgbd.launch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看Published Topics</p><pre class="line-numbers language-bash"><code class="language-bash">rostopic list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-补充"><a href="#3-补充" class="headerlink" title="3.补充"></a>3.补充</h2><p><img src="/2020/02/09/ros-xia-intel-realsense-d435i-an-zhuang/1.png" alt></p><p>查看ros版本：cd /opt/ros/<strong>melodic</strong><br>终端执行：roslaunch realsense2_camera rs_rgbd.launch<br>报错：ResourceNotFound: rgbd_launch<br>解决方案：sudo apt-get install ros-melodic-rgbd-launch</p><pre class="line-numbers language-shell"><code class="language-shell">uname -r #查看内核版本<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> INTEL REALSENSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Faster R-CNN训练模型</title>
      <link href="/2020/01/31/faster-r-cnn-xun-lian-mo-xing/"/>
      <url>/2020/01/31/faster-r-cnn-xun-lian-mo-xing/</url>
      
        <content type="html"><![CDATA[<p>具体操作参考源码地址:<a href="https://github.com/endernewton/tf-faster-rcnn" target="_blank" rel="noopener">https://github.com/endernewton/tf-faster-rcnn</a></p><p>只做补充说明。</p><h1 id="Faster-R-CNN训练模型"><a href="#Faster-R-CNN训练模型" class="headerlink" title="Faster R-CNN训练模型"></a>Faster R-CNN训练模型</h1><h2 id="1-制作PASCAL-VOC2007格式的数据集"><a href="#1-制作PASCAL-VOC2007格式的数据集" class="headerlink" title="1.制作PASCAL VOC2007格式的数据集"></a>1.制作PASCAL VOC2007格式的数据集</h2><h3 id="a-VOC2007文件夹下有以下5个文件夹"><a href="#a-VOC2007文件夹下有以下5个文件夹" class="headerlink" title="a. VOC2007文件夹下有以下5个文件夹"></a>a. VOC2007文件夹下有以下5个文件夹</h3><p><strong>文件位置/tf-faster-rcnn/data/VOCdevkit2007/VOC2007</strong></p><p>具体格式参照<a href="https://pjreddie.com/projects/pascal-voc-dataset-mirror/" target="_blank" rel="noopener">VOC2007</a></p><p>Annotations<br>存放的是xml格式的标签文件，每个xml文件对应JPEGImages的图片。</p><p>JPEGImages<br>存放的是数据集图片，包括训练和测试图片。图片需是JPEG或者JPG格式。</p><p>ImageSets<br>存在三个文件夹，Layout、Main、Segmentation。只用存放图像数据的Main文件，其他两个暂且不管。</p><p>Main文件夹下包含4个txt文档，test.txt、train.txt、val.txt和trainval.txt，包括测试集，训练集和验证集。txt内是图片名称，不包含后缀。</p><p>SegmentationClass和SegmentationObject<br>图像分割相关，暂且用不到。</p><h3 id="b-数据集重命名python代码"><a href="#b-数据集重命名python代码" class="headerlink" title="b. 数据集重命名python代码"></a>b. 数据集重命名python代码</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> ospath <span class="token operator">=</span> <span class="token string">"E:\\image"</span>filelist <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#该文件夹下所有的文件（包括文件夹）</span>count<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> file <span class="token keyword">in</span> filelist<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token keyword">for</span> file <span class="token keyword">in</span> filelist<span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#遍历所有文件</span>    Olddir<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span>file<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#原来的文件路径</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span>Olddir<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#如果是文件夹则跳过</span>        <span class="token keyword">continue</span>    filename<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true">#文件名</span>    filetype<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true">#文件扩展名</span>    Newdir<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span>str<span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">+</span>filetype<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#用字符串函数zfill 以0补全所需位数</span>    os<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>Olddir<span class="token punctuation">,</span>Newdir<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#重命名</span>    count<span class="token operator">+=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="c-LabelImg进行标注"><a href="#c-LabelImg进行标注" class="headerlink" title="c. LabelImg进行标注"></a>c. LabelImg进行标注</h3><p>标注后的xml文件移动至Annotations下。</p><h3 id="d-划分数据集"><a href="#d-划分数据集" class="headerlink" title="d.划分数据集"></a>d.划分数据集</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> randomtrainval_percent <span class="token operator">=</span> <span class="token number">0.6</span>train_percent <span class="token operator">=</span> <span class="token number">0.4</span>xmlfilepath <span class="token operator">=</span> <span class="token string">'Annotations'</span>txtsavepath <span class="token operator">=</span> <span class="token string">'ImageSets\Main'</span>total_xml <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>xmlfilepath<span class="token punctuation">)</span>num<span class="token operator">=</span>len<span class="token punctuation">(</span>total_xml<span class="token punctuation">)</span>list<span class="token operator">=</span>range<span class="token punctuation">(</span>num<span class="token punctuation">)</span>tv<span class="token operator">=</span>int<span class="token punctuation">(</span>num<span class="token operator">*</span>trainval_percent<span class="token punctuation">)</span>tr<span class="token operator">=</span>int<span class="token punctuation">(</span>num<span class="token operator">*</span>train_percent<span class="token punctuation">)</span>trainval<span class="token operator">=</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>list<span class="token punctuation">,</span>tv<span class="token punctuation">)</span>train<span class="token operator">=</span>random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>trainval<span class="token punctuation">,</span>tr<span class="token punctuation">)</span>ftrainval <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'ImageSets/Main/trainval.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>ftest <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'ImageSets/Main/test.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>ftrain <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'ImageSets/Main/train.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>fval <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'ImageSets/Main/val.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i  <span class="token keyword">in</span> list<span class="token punctuation">:</span>    name<span class="token operator">=</span>total_xml<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'\n'</span>    <span class="token keyword">if</span> i <span class="token keyword">in</span> trainval<span class="token punctuation">:</span>        ftrainval<span class="token punctuation">.</span>write<span class="token punctuation">(</span>name<span class="token punctuation">)</span>        <span class="token keyword">if</span> i <span class="token keyword">in</span> train<span class="token punctuation">:</span>            ftrain<span class="token punctuation">.</span>write<span class="token punctuation">(</span>name<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            fval<span class="token punctuation">.</span>write<span class="token punctuation">(</span>name<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        ftest<span class="token punctuation">.</span>write<span class="token punctuation">(</span>name<span class="token punctuation">)</span>ftrainval<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>ftrain<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>fval<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>ftest <span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-训练自己的模型"><a href="#2-训练自己的模型" class="headerlink" title="2.训练自己的模型"></a>2.训练自己的模型</h2><h3 id="a-训练前的准备"><a href="#a-训练前的准备" class="headerlink" title="a.训练前的准备"></a>a.训练前的准备</h3><p><strong>删除缓存</strong></p><p>在output目录下找找到相应的模型。如果用vgg16模型则在output目录下找vgg16。其它模型类推。</p><p>tf-faster-rcnn/output/vgg16/voc_2007_trainval/default</p><p>tf-faster-rcnn/data/cache</p><p>tf_faster_rcnn/data/VOCdevkit2007/annotations_cache</p><p>若本来就没有训练过则没有生成以上目录，则不用删除。</p><p><strong>其他更改</strong></p><p>在tf-faster-rcnn/lib/datasets目录下的pascal_voc.py里第36行更改自己的类别，把后面的原来的20个label换成自己的。</p><h3 id="b-相应参数位置"><a href="#b-相应参数位置" class="headerlink" title="b.相应参数位置"></a>b.相应参数位置</h3><p><strong>ITERS</strong></p><p>./experiments/scripts/train_faster_rcnn.sh里的第22行把ITERS=70000改成ITERS=200，</p><p>同时把./experiments/scripts/test_faster_rcnn.sh的ITERS也改成200。</p><p><strong>STEPSIZE</strong>要小于<strong>ITERS</strong></p><p><strong>config</strong></p><p>./lib/model/config.py里含有<strong>LEARNING_RATE</strong>、<strong>BATCH_SIZE</strong>等参数</p><h3 id="c-训练模型"><a href="#c-训练模型" class="headerlink" title="c.训练模型"></a>c.训练模型</h3><p><a href="https://github.com/tensorflow/models/tree/master/research/slim#pre-trained-models" target="_blank" rel="noopener">相关模型</a>下载</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">mkdir</span> -p data/imagenet_weights<span class="token comment" spellcheck="true">#创建目录</span><span class="token function">cd</span> data/imagenet_weights<span class="token function">wget</span> -v http://download.tensorflow.org/models/vgg_16_2016_08_28.tar.gz<span class="token function">tar</span> -xzvf vgg_16_2016_08_28.tar.gz<span class="token function">mv</span> vgg_16.ckpt vgg16.ckpt<span class="token comment" spellcheck="true">#重命名</span><span class="token function">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>训练</p><pre class="line-numbers language-bash"><code class="language-bash">./experiments/scripts/train_faster_rcnn.sh <span class="token punctuation">[</span>GPU_ID<span class="token punctuation">]</span> <span class="token punctuation">[</span>DATASET<span class="token punctuation">]</span> <span class="token punctuation">[</span>NET<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># GPU_ID is the GPU you want to test on</span><span class="token comment" spellcheck="true"># NET in {vgg16, res50, res101, res152} is the network arch to use</span><span class="token comment" spellcheck="true"># DATASET {pascal_voc, pascal_voc_0712, coco} is defined in train_faster_rcnn.sh</span><span class="token comment" spellcheck="true"># Examples:</span>./experiments/scripts/train_faster_rcnn.sh 1 pascal_voc vgg16<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Tensorboard</p><p>通过浏览器打开</p><pre class="line-numbers language-bash"><code class="language-bash">tensorboard --logdir<span class="token operator">=</span>tensorboard/vgg16/voc_2007_trainval/ --port<span class="token operator">=</span>7001 <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试</p><pre class="line-numbers language-bash"><code class="language-bash">./experiments/scripts/test_faster_rcnn.sh <span class="token punctuation">[</span>GPU_ID<span class="token punctuation">]</span> <span class="token punctuation">[</span>DATASET<span class="token punctuation">]</span> <span class="token punctuation">[</span>NET<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># GPU_ID is the GPU you want to test on</span><span class="token comment" spellcheck="true"># NET in {vgg16, res50, res101, res152} is the network arch to use</span><span class="token comment" spellcheck="true"># DATASET {pascal_voc, pascal_voc_0712, coco} is defined in test_faster_rcnn.sh</span><span class="token comment" spellcheck="true"># Examples:</span>./experiments/scripts/test_faster_rcnn.sh 1 pascal_voc vgg16<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="d-相应位置"><a href="#d-相应位置" class="headerlink" title="d.相应位置"></a>d.相应位置</h3><p>训练好的模型默认保存在下面的目录:</p><p>output/[NET]/[DATASET]/default/</p><p>测试输出保存在下面的目录:</p><p>output/[NET]/[DATASET]/default/[SNAPSHOT]/</p><p>训练和验证的Tensorboard信息保存在以下目录:</p><p>tensorboard/[NET]/[DATASET]/default/<br>tensorboard/[NET]/[DATASET]/default_val/</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="a-关于GPU0与GPU1"><a href="#a-关于GPU0与GPU1" class="headerlink" title="a.关于GPU0与GPU1"></a>a.关于GPU0与GPU1</h3><p>对于我的笔记本而言，打开任务管理器查看。</p><img src="/2020/01/31/faster-r-cnn-xun-lian-mo-xing/1.png"><p>如图，GPU0为集成显卡，GPU1为独立显卡。</p><h3 id="b-关于源码使用预训练模型测试结果时报错"><a href="#b-关于源码使用预训练模型测试结果时报错" class="headerlink" title="b.关于源码使用预训练模型测试结果时报错"></a>b.关于源码使用预训练模型测试结果时报错</h3><p><strong>TypeError: write() argument must be str, not bytes</strong></p><p>参考<a href="https://github.com/endernewton/tf-faster-rcnn/issues/452" target="_blank" rel="noopener">issues</a></p><p>Edit tf-faster-rcnn/lib/datasets/voc_eval.py</p><p>line121, change ‘w’ to ‘wb’ like this</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">with</span> open<span class="token punctuation">(</span>cachefile<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>line105, change to</p><pre class="line-numbers language-python"><code class="language-python">cachefile <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>cachedir<span class="token punctuation">,</span> <span class="token string">'%s_annots.pkl'</span> <span class="token operator">%</span> imagesetfile<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Deep learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Faster R-CNN </tag>
            
            <tag> object detection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习环境IDE(pycharm)</title>
      <link href="/2020/01/30/shen-du-xue-xi-huan-jing-ide-pycharm/"/>
      <url>/2020/01/30/shen-du-xue-xi-huan-jing-ide-pycharm/</url>
      
        <content type="html"><![CDATA[<h1 id="1-pycharm安装"><a href="#1-pycharm安装" class="headerlink" title="1.pycharm安装"></a>1.pycharm安装</h1><p>1）.下载Community版</p><p><a href="https://www.jetbrains.com/pycharm/download/#section=linux" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/download/#section=linux</a></p><p>2）.下载完成，找到下载的压缩包。</p><p>解压至安装位置</p><p>3）.进入解压文件bin文件夹下打开终端</p><pre class="line-numbers language-bash"><code class="language-bash">sh ./pycharm.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装pycharm</p><h1 id="2-创建桌面快捷方式"><a href="#2-创建桌面快捷方式" class="headerlink" title="2.创建桌面快捷方式"></a>2.创建桌面快捷方式</h1><p>同样在bin文件夹下打开终端</p><pre class="line-numbers language-bash"><code class="language-bash">./pycharm.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可打开pycharm</p><p>依次Tools &gt; Create Desktop Entry创建快捷方式</p><h1 id="3-设置编译器为anaconda虚拟环境"><a href="#3-设置编译器为anaconda虚拟环境" class="headerlink" title="3.设置编译器为anaconda虚拟环境"></a>3.设置编译器为anaconda虚拟环境</h1><p>依次File &gt; Setting &gt; Project interpreter</p><p>选择对应的虚拟环境</p><h1 id="4-补充"><a href="#4-补充" class="headerlink" title="4.补充"></a>4.补充</h1><p>pycharm找不到cuda库</p><p>File &gt; Setting &gt; Bulid,Execution,Deloyment &gt; Console &gt; Python Console</p><p>在Environment variables处添加</p><pre class="line-numbers language-bash"><code class="language-bash">LD_LIBRARY_PATH<span class="token operator">=</span>/usr/local/cuda-9.0/lib64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>失效时在终端输入</p><pre class="line-numbers language-bash"><code class="language-bash">sudu ldconfig /usr/local/cuda-9.0/lib64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="5-快捷键"><a href="#5-快捷键" class="headerlink" title="5.快捷键"></a>5.快捷键</h1><ul><li>step over（F8）：在单步执行时，在函数内遇到子函数时不会进入子函数内单步执行，而是将子函数整个执行完再停止，也就是把子函数整个作为一步。在不存在子函数的情况下是和step into效果一样的。简单的说就是，程序代码越过子函数，但子函数会执行，且不进入。</li><li>step into（F7）：在单步执行时，遇到子函数就进入并且继续单步执行，有的会跳到源代码里面去执行。</li><li>step into my code（Alt+Shift+F7）：在单步执行时，遇到子函数就进入并且继续单步执行，不会进入到源码中。</li><li>step out（Shift+F8）：假如进入了一个函数体中，你看了两行代码，不想看了，跳出当前函数体内，返回到调用此函数的地方，即使用此功能即可。</li><li>Resume program(F9)：继续恢复程序，直接运行到下一断点处。</li><li>Ctrl + 鼠标左键： 跳转</li><li>ctrl+d：复制一行</li><li>ctrl+x：删除一行</li><li>Ctrl + / :   行注释/取消行注释</li><li>Ctrl+Z :撤销：</li></ul>]]></content>
      
      
      <categories>
          
          <category> Deep learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>labelimg安装</title>
      <link href="/2020/01/30/labelimg-an-zhuang/"/>
      <url>/2020/01/30/labelimg-an-zhuang/</url>
      
        <content type="html"><![CDATA[<p>源码地址：<a href="https://github.com/tzutalin/labelImg" target="_blank" rel="noopener">https://github.com/tzutalin/labelImg</a></p><h1 id="安装方式：Python-3-Qt5"><a href="#安装方式：Python-3-Qt5" class="headerlink" title="安装方式：Python 3 + Qt5"></a>安装方式：Python 3 + Qt5</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> pyqt5-dev-toolspip <span class="token function">install</span> lxml<span class="token function">git</span> clone https://github.com/tzutalin/labelImg.git<span class="token function">cd</span> labelImg<span class="token function">make</span> allpython3 labelImg.py  <span class="token comment" spellcheck="true">#打开labelImg</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Deep learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> labelimg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Faster R-CNN环境配置</title>
      <link href="/2020/01/25/faster-r-cnn-huan-jing-pei-zhi/"/>
      <url>/2020/01/25/faster-r-cnn-huan-jing-pei-zhi/</url>
      
        <content type="html"><![CDATA[<p>1.驱动安装(nvidia-smi)</p><p>2.cuda安装(nvcc -V)</p><p>3.cudnn安装(cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2)</p><p>4.gcc/g++版本（gcc -v）</p><p>gcc升降级(可选)</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y gcc-4.8<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y g++-4.8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> /usr/bin<span class="token function">sudo</span> <span class="token function">rm</span> gcc<span class="token function">sudo</span> <span class="token function">ln</span> -s gcc-4.8 gcc<span class="token function">sudo</span> <span class="token function">rm</span> g++<span class="token function">sudo</span> <span class="token function">ln</span> -s g++-4.8 g++<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.anaconda（conda -V）</p><p>创建虚拟环境(pyhton版本为3.6)，安装tensorflow。</p><pre class="line-numbers language-bash"><code class="language-bash">pip <span class="token function">install</span> -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflow-gpu<span class="token operator">==</span>1.9.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试tensorflow</p><p>6.安装运行需要python库</p><p>cython，opencv-python，easydict，Pillow，matplotlib，scipy，pyyaml</p><pre class="line-numbers language-bash"><code class="language-bash">pip <span class="token function">install</span> -i https://pypi.tuna.tsinghua.edu.cn/simple cython<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7.pycharm（IDE）</p><p>设置编译器为conda环境</p><p>8.补充</p><p><img src="/2020/01/25/faster-r-cnn-huan-jing-pei-zhi/image003.png" alt></p><pre class="line-numbers language-bash"><code class="language-bash"> pip <span class="token function">install</span> numpy<span class="token operator">==</span>1.16<span class="token comment" spellcheck="true">#numpy降级</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Deep learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Faster R-CNN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cuda cudnn安装卸载</title>
      <link href="/2020/01/24/cuda-cudnn-an-zhuang-xie-zai/"/>
      <url>/2020/01/24/cuda-cudnn-an-zhuang-xie-zai/</url>
      
        <content type="html"><![CDATA[<h1 id="1-cuda安装"><a href="#1-cuda安装" class="headerlink" title="1.cuda安装"></a>1.cuda安装</h1><p>选择对应版本，系统，下载runfile{local}文件。</p><p><a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-toolkit-archive</a></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> sh cuda_10.2.89_440.33.01_linux.run<span class="token comment" spellcheck="true">#对应文件名称</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>驱动去除（之前安装过）</p><p><img src="/2020/01/24/cuda-cudnn-an-zhuang-xie-zai/image002.png" alt></p><p>另一种安装方式，关闭图像界面lightdm进入命令行ctrl+alt+f1安装。</p><p>安装完成设置环境</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> gedit ~/.bashrc<span class="token comment" spellcheck="true">#插入以下内容cuda-x.x为cuda版本号</span><span class="token function">export</span>  PATH<span class="token operator">=</span>/usr/local/cuda-x.x/bin:<span class="token variable">$PATH</span><span class="token function">export</span>  LD_LIBRARY_PATH<span class="token operator">=</span>/usr/local/cuda-x.x/lib64<span class="token variable">$LD_LIBRARY_PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">nvcc -V <span class="token comment" spellcheck="true">#安装完成查看版本</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="2-cudnn安装"><a href="#2-cudnn安装" class="headerlink" title="2.cudnn安装"></a>2.cudnn安装</h1><p><a href="https://developer.nvidia.com/rdp/cudnn-download下载需注册NVIDIA账号" target="_blank" rel="noopener">https://developer.nvidia.com/rdp/cudnn-download下载需注册NVIDIA账号</a></p><p>下载与cuda版本对应的cudnn版本</p><p>cudNN Library for Linux</p><p>解压下载的文件，可以看到cuda文件夹，在当前目录打开终端，执行如下命令</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> -P cuda/lib64/libcudnn* /usr/local/cuda-x.x/lib64/<span class="token function">sudo</span> <span class="token function">cp</span>  cuda/include/cudnn.h /usr/local/cuda-x.x/include/<span class="token function">sudo</span> <span class="token function">chmod</span> a+r /usr/local/cuda-x.x/include/cudnn.h <span class="token function">sudo</span> <span class="token function">chmod</span> a+r /usr/local/cuda-x.x/lib64/libcudnn*<span class="token comment" spellcheck="true"># 为所有用户设置读取权限</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libcupti-dev <span class="token comment" spellcheck="true">#安装libcupti,这是 NVIDIA CUDA 分析工具接口，此库提供高级分析支持.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看cudnn版本</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cat</span> /usr/local/cuda/include/cudnn.h <span class="token operator">|</span> <span class="token function">grep</span> CUDNN_MAJOR -A 2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="3-cuda卸载"><a href="#3-cuda卸载" class="headerlink" title="3.cuda卸载"></a>3.cuda卸载</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> /usr/local/cuda-x.x/bin/cuda-uninstaller<span class="token function">sudo</span> <span class="token function">rm</span> -rf /usr/local/cuda-x.x/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="4-cudnn卸载"><a href="#4-cudnn卸载" class="headerlink" title="4.cudnn卸载"></a>4.cudnn卸载</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">rm</span> -rf /usr/local/cuda/include/cudnn.h<span class="token function">sudo</span> <span class="token function">rm</span> -rf /usr/local/cuda/lib64/libcudnn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Deep learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cuda </tag>
            
            <tag> cudnn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 安装 ROS</title>
      <link href="/2020/01/15/ubuntu-an-zhuang-ros/"/>
      <url>/2020/01/15/ubuntu-an-zhuang-ros/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu18-04下安装ROS-Melodic"><a href="#Ubuntu18-04下安装ROS-Melodic" class="headerlink" title="Ubuntu18.04下安装ROS Melodic"></a>Ubuntu18.04下安装ROS Melodic</h1><p>参考：ROSwiki<a href="http://wiki.ros.org/melodic/Installation/Ubuntu" target="_blank" rel="noopener">http://wiki.ros.org/melodic/Installation/Ubuntu</a></p><h2 id="1-软件与更新"><a href="#1-软件与更新" class="headerlink" title="1.软件与更新"></a>1.软件与更新</h2><p>Ubuntu软件开启”restricted”、”universe” 和 “multiverse”</p><h2 id="2-设置可以从-镜像源"><a href="#2-设置可以从-镜像源" class="headerlink" title="2.设置可以从 镜像源"></a>2.设置可以从 镜像源</h2><p>官网</p><pre class="line-numbers language-shell"><code class="language-shell">sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>清华源</p><pre class="line-numbers language-shell"><code class="language-shell">sudo sh -c '. /etc/lsb-release && echo "deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main" > /etc/apt/sources.list.d/ros-latest.list'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>中科大源</p><pre class="line-numbers language-shell"><code class="language-shell">sudo sh -c '. /etc/lsb-release && echo "deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main" > /etc/apt/sources.list.d/ros-latest.list'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-添加秘钥"><a href="#3-添加秘钥" class="headerlink" title="3.添加秘钥"></a>3.添加秘钥</h2><pre class="line-numbers language-shell"><code class="language-shell">sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-更新软件源"><a href="#4-更新软件源" class="headerlink" title="4.更新软件源"></a>4.更新软件源</h2><pre class="line-numbers language-shell"><code class="language-shell">sudo apt-get update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-下载ros"><a href="#5-下载ros" class="headerlink" title="5.下载ros"></a>5.下载ros</h2><pre class="line-numbers language-shell"><code class="language-shell">sudo apt-get install ros-melodic-desktop-full<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-初始化操作"><a href="#6-初始化操作" class="headerlink" title="6.初始化操作"></a>6.初始化操作</h2><pre class="line-numbers language-shell"><code class="language-shell">sudo rosdep initrosdep update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7-环境配置"><a href="#7-环境配置" class="headerlink" title="7.环境配置"></a>7.环境配置</h2><pre class="line-numbers language-shell"><code class="language-shell">echo "source /opt/ros/melodic/setup.bash">> ~/.bashrcsource ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="8-安装rosinstall"><a href="#8-安装rosinstall" class="headerlink" title="8.安装rosinstall"></a>8.安装rosinstall</h2><pre class="line-numbers language-shell"><code class="language-shell">sudo apt-get install python-rosinstall python-rosinstall-generator python-wstool build-essential<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="9-小海龟"><a href="#9-小海龟" class="headerlink" title="9.小海龟"></a>9.小海龟</h2><p>第一个终端敲入命令：</p><pre class="line-numbers language-shell"><code class="language-shell">roscore<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二个终端敲入命令：</p><pre class="line-numbers language-shell"><code class="language-shell">rosrun turtlesim turtlesim_node#小海龟出现<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三个终端敲入命令：</p><pre class="line-numbers language-shell"><code class="language-shell">rosrun turtlesim turtle_teleop_key#键盘控制海龟移动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="10-ros卸载"><a href="#10-ros卸载" class="headerlink" title="10.ros卸载"></a>10.ros卸载</h2><pre class="line-numbers language-shell"><code class="language-shell">sudo apt-get purge ros-*sudo rm -rf /etc/ros #rosdep文件夹sudo gedit ~/.bashrc #删除ros的环境变量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="rosdep-init-错误"><a href="#rosdep-init-错误" class="headerlink" title="rosdep init  错误"></a>rosdep init  错误</h2><pre class="line-numbers language-shell"><code class="language-shell">ERROR: cannot download default sources list from:https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/sources.list.d/20-default.listWebsite may be down.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>参考<a href="https://zhuanlan.zhihu.com/p/77483614" target="_blank" rel="noopener">知乎</a></p><p><strong>解决方案</strong></p><ul><li>证书问题 <pre class="line-numbers language-shell"><code class="language-shell">sudo apt-get install ca-certificates<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>ssl certs问题<pre class="line-numbers language-shell"><code class="language-shell">sudo c_rehash /etc/ssl/certs sudo -E rosdep init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>手动创建20-default.list文件<pre class="line-numbers language-shell"><code class="language-shell">sudo mkdir -p /etc/ros/rosdep/sources.list.d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>cd /etc/ros/rosdep/sources.list.d</p><p>sudo gedit 20-default.list #手动打开链接，粘贴文本内容。所有raw.githubusercontent.com改为raw.github.com</p><p>rosdep update</p><p>```<br>rosdep update报错&lt;urlopen error &lt;urlopen error [Errno 111] Connection refused&gt;</p><p>解决方法：<br>sudo gedit /etc/resolv.conf</p><p>将原有的nameserver这一行注释，并添加以下两行：</p><p>nameserver 8.8.8.8 #google域名服务器</p><p>nameserver 8.8.4.4 #google域名服务器</p>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROS </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>anaconda配置tensorflow</title>
      <link href="/2020/01/06/anaconda-pei-zhi-tensorflow/"/>
      <url>/2020/01/06/anaconda-pei-zhi-tensorflow/</url>
      
        <content type="html"><![CDATA[<h1 id="Anaconda配置虚拟环境安装tensorflow"><a href="#Anaconda配置虚拟环境安装tensorflow" class="headerlink" title="Anaconda配置虚拟环境安装tensorflow"></a>Anaconda配置虚拟环境安装tensorflow</h1><h2 id="1-Anaconda的安装"><a href="#1-Anaconda的安装" class="headerlink" title="1.Anaconda的安装"></a>1.Anaconda的安装</h2><p>Anaconda3官网下载地址：<a href="https://www.anaconda.com/" target="_blank" rel="noopener">https://www.anaconda.com/</a></p><p>清华的Anaconda镜像地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/</a></p><p>进入文件下载以后的目录打开终端，运行命令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">bash</span> Anaconda*.sh  <span class="token comment" spellcheck="true"># * 代表对应的安装文件版本</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后就一路enter 和yes</p><p>安装完成后重启一个终端输入以下确认安装完成（未找到命令，重启再试试。还没有的话需添加环境变量）</p><pre class="line-numbers language-bash"><code class="language-bash">anaconda -Vconda -V<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="环境变量设置（conda命令无效时）"><a href="#环境变量设置（conda命令无效时）" class="headerlink" title="环境变量设置（conda命令无效时）"></a>环境变量设置（conda命令无效时）</h3><p>打开.bashrc 文件</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> gedit ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在打开的文件最后一行新增环境变量</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">export</span> PATH<span class="token operator">=</span>~/anaconda3/bin:<span class="token variable">$PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改完成保存</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">source</span> ~/.bashrc <span class="token comment" spellcheck="true">#使其立即生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash"><code class="language-bash">conda init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Anaconda后配置清华的镜像仓库源-可选"><a href="#Anaconda后配置清华的镜像仓库源-可选" class="headerlink" title="Anaconda后配置清华的镜像仓库源(可选)"></a>Anaconda后配置清华的镜像仓库源(可选)</h3><pre class="line-numbers language-bash"><code class="language-bash">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --set show_channel_urls <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-虚拟环境配置Tensorflow"><a href="#2-虚拟环境配置Tensorflow" class="headerlink" title="2.虚拟环境配置Tensorflow"></a>2.虚拟环境配置Tensorflow</h2><p>1). 创建虚拟环境</p><pre class="line-numbers language-bash"><code class="language-bash">conda create -n env_name python<span class="token operator">=</span>version <span class="token comment" spellcheck="true">#其中env_name为新建的环境名，version为需要安装的Python版本号</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2). 激活和退出指令</p><pre class="line-numbers language-bash"><code class="language-bash">conda activate env_name <span class="token comment" spellcheck="true">#激活环境</span>conda deactivate <span class="token comment" spellcheck="true">#退出环境</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3). 输入命令查看可用版本的tensorflow-gpu</p><pre class="line-numbers language-bash"><code class="language-bash">conda search tensorflow-gpu <span class="token comment" spellcheck="true">#可查看可安装版本</span>conda <span class="token function">install</span> tensorflow-gpu<span class="token operator">==</span>1.9.0 pip <span class="token function">install</span> --upgrade tensorflow-gpu <span class="token comment" spellcheck="true">#也可选择pip安装方式</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>conda安装方式不需要单独安装cuda和cudnn，Anaconda会自动下载并安装好。</p><h2 id="3-测试Tensorflow"><a href="#3-测试Tensorflow" class="headerlink" title="3.测试Tensorflow"></a>3.测试Tensorflow</h2><pre class="line-numbers language-bash"><code class="language-bash">python<span class="token function">import</span> tensorflow as tfprint<span class="token punctuation">(</span>tf.__version__<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#查看tensorflow版本</span>tf.test.is_gpu_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#返回True或False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-卸载anaconda"><a href="#4-卸载anaconda" class="headerlink" title="4.卸载anaconda"></a>4.卸载anaconda</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">rm</span> -rf anaconda3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>清理./bashrc 文件中路径</p><h2 id="5-补充"><a href="#5-补充" class="headerlink" title="5.补充"></a>5.补充</h2><pre class="line-numbers language-bash"><code class="language-bash">conda <span class="token function">env</span> list <span class="token comment" spellcheck="true">#查看已有虚拟环境</span>conda <span class="token function">env</span> remove -n env_name --all<span class="token comment" spellcheck="true">#移除虚拟环境</span>pip <span class="token function">install</span> 插件名字 -i https://pypi.tuna.tsinghua.edu.cn/simple <span class="token comment" spellcheck="true">#pip下载慢临时使用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>anaconda安装后ubuntu启动终端默认base环境</p><p>方法一：</p><p>每次在命令行通过conda deactivate退出base环境回到系统自动的环境</p><p>方法二：</p><p>1，通过将auto_activate_base参数设置为false实现：</p><p>1，通过将auto_activate_base参数设置为false实现：</p><pre class="line-numbers language-shell"><code class="language-shell">conda config --set auto_activate_base false<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2，那要进入的话通过conda activate base</p><p>3，如果反悔了还是希望base保留的话通过 .condarc文件修改</p>]]></content>
      
      
      <categories>
          
          <category> tensorflow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装NVIDIA驱动(run方式)</title>
      <link href="/2020/01/01/ubuntu-an-zhuang-nvidia-qu-dong-run-fang-shi/"/>
      <url>/2020/01/01/ubuntu-an-zhuang-nvidia-qu-dong-run-fang-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu系统安装NVIDIA驱动-run方式"><a href="#Ubuntu系统安装NVIDIA驱动-run方式" class="headerlink" title="Ubuntu系统安装NVIDIA驱动(run方式)"></a>Ubuntu系统安装NVIDIA驱动(run方式)</h1><h2 id="1-Nvidia驱动下载"><a href="#1-Nvidia驱动下载" class="headerlink" title="1.Nvidia驱动下载"></a>1.Nvidia驱动下载</h2><p>[<a href="https://www.nvidia.cn/Download/index.aspx?lang=cn]" target="_blank" rel="noopener">https://www.nvidia.cn/Download/index.aspx?lang=cn]</a>: </p><p>官网下载显卡对应的驱动文件保存至下载目录。</p><h2 id="2、删除原有驱动-安装依赖。（可选）"><a href="#2、删除原有驱动-安装依赖。（可选）" class="headerlink" title="2、删除原有驱动,安装依赖。（可选）"></a>2、删除原有驱动,安装依赖。（可选）</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> remove --purge nvidia*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> apt <span class="token function">install</span> gcc<span class="token function">sudo</span> apt <span class="token function">install</span> <span class="token function">make</span>  <span class="token comment" spellcheck="true">#安装驱动需要依赖</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-禁用nouveau驱动"><a href="#3-禁用nouveau驱动" class="headerlink" title="3.禁用nouveau驱动"></a>3.禁用nouveau驱动</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> gedit /etc/modprobe.d/blacklist.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑 /etc/modprobe.d/blacklist-nouveau.conf 文件，末行添加</p><pre class="line-numbers language-bash"><code class="language-bash">blacklist nouveau<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>保存</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> update-initramfs -u <span class="token comment" spellcheck="true">#更新</span><span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5-验证nouveau是否已禁用"><a href="#5-验证nouveau是否已禁用" class="headerlink" title="5.验证nouveau是否已禁用"></a>5.验证nouveau是否已禁用</h2><pre class="line-numbers language-bash"><code class="language-bash">lsmod <span class="token operator">|</span> <span class="token function">grep</span> nouveau<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>没有返回信息显示，说明nouveau已被禁用。</p><h2 id="6-关闭图形化界面进入命令行"><a href="#6-关闭图形化界面进入命令行" class="headerlink" title="6.关闭图形化界面进入命令行"></a>6.关闭图形化界面进入命令行</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> lightdm stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果提示unit lightdm.service not loaded</p><p>则先安装LightDm： <code>sudo apt install lightdm</code></p><p>安装完毕后跳出一个界面，选择lightdm，再sudo service lightdm stop</p><p>执行后图形界面关闭，按Ctrl+Alt+F1进入命令行界面</p><p>输入账号，密码。</p><h2 id="7-安装Nvidia驱动"><a href="#7-安装Nvidia驱动" class="headerlink" title="7.安装Nvidia驱动"></a>7.安装Nvidia驱动</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> ~/Download/ <span class="token comment" spellcheck="true">#驱动位置</span><span class="token function">sudo</span> <span class="token function">chmod</span> a+x NVIDIA-Linux-x86_64-xxx.xx.run <span class="token comment" spellcheck="true">#给文件赋予执行权限（这步好像可有可无）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输入密码</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> ./NVIDIA-Linux-x86_64-xxx.xx.run –no-opengl-files<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>–no-opengl-files</strong> 只安装驱动文件，不安装OpenGL文件。</li><li>–no-x-check 安装驱动时不检查X服务</li><li>–no-nouveau-check 安装驱动时不检查nouveau</li></ul><p>安装完毕后重启验证</p><pre class="line-numbers language-bash"><code class="language-bash">nvidia-smi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="8-补充"><a href="#8-补充" class="headerlink" title="8.补充"></a>8.补充</h2><p>run安装方式卸载驱动</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> /usr/bin/nvidia-uninstall <span class="token comment" spellcheck="true">#uninstall driver</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找不到驱动情况</p><img src="/2020/01/01/ubuntu-an-zhuang-nvidia-qu-dong-run-fang-shi/image001.png"><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> dkms<span class="token function">sudo</span> dkms <span class="token function">install</span> -m nvidia -v 440.44 <span class="token comment" spellcheck="true">#版本号可进入/usr/src查看</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NVIDIA </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
